{"ast":null,"code":"import Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n// إعدادات الكوكيز الافتراضية\nconst defaultOptions = {\n  path: '/',\n  secure: process.env.NODE_ENV === 'production',\n  sameSite: 'strict'\n};\n\n// إدارة التوكنز\nexport const tokenManager = {\n  // تخزين access token\n  setAccessToken: token => {\n    cookies.set('access_token', token, defaultOptions);\n  },\n  // تخزين refresh token\n  setRefreshToken: token => {\n    cookies.set('refresh_token', token, defaultOptions);\n  },\n  // الحصول على access token\n  getAccessToken: () => {\n    return cookies.get('access_token');\n  },\n  // الحصول على refresh token\n  getRefreshToken: () => {\n    return cookies.get('refresh_token');\n  },\n  // تحديث التوكنز\n  updateTokens: (access, refresh) => {\n    cookies.set('access_token', access, defaultOptions);\n    cookies.set('refresh_token', refresh, defaultOptions);\n  },\n  // حذف التوكنز\n  removeTokens: () => {\n    cookies.remove('access_token', {\n      path: '/'\n    });\n    cookies.remove('refresh_token', {\n      path: '/'\n    });\n  }\n};\n\n// إدارة بيانات المستخدم مع تشفير Base64\nexport const userDataManager = {\n  // تخزين بيانات المستخدم\n  setUserData: userData => {\n    const userInfo = {\n      id: userData.id,\n      is_superuser: userData.is_superuser,\n      is_active: userData.is_active,\n      role: userData.role,\n      phone_number: userData.phone_number\n    };\n    // تشفير Base64\n    const encoded = btoa(JSON.stringify(userInfo));\n    cookies.set('user_data', encoded, defaultOptions);\n  },\n  // الحصول على بيانات المستخدم\n  getUserData: () => {\n    const encoded = cookies.get('user_data');\n    if (!encoded) return null;\n    try {\n      // فك التشفير Base64\n      return JSON.parse(atob(encoded));\n    } catch (e) {\n      return null;\n    }\n  },\n  // حذف بيانات المستخدم\n  removeUserData: () => {\n    cookies.remove('user_data', {\n      path: '/'\n    });\n  }\n};\n\n// إدارة الجلسة الكاملة\nexport const sessionManager = {\n  // حفظ جلسة كاملة\n  saveSession: response => {\n    const {\n      access,\n      refresh,\n      user: userData\n    } = response;\n    tokenManager.setAccessToken(access);\n    tokenManager.setRefreshToken(refresh);\n    userDataManager.setUserData(userData);\n  },\n  // التحقق من وجود جلسة\n  hasSession: () => {\n    const accessToken = tokenManager.getAccessToken();\n    const refreshToken = tokenManager.getRefreshToken();\n    const userData = userDataManager.getUserData();\n    return !!(accessToken && refreshToken && userData);\n  },\n  // حذف الجلسة كاملة\n  clearSession: () => {\n    tokenManager.removeTokens();\n    userDataManager.removeUserData();\n  },\n  // استعادة الجلسة\n  restoreSession: () => {\n    const accessToken = tokenManager.getAccessToken();\n    const refreshToken = tokenManager.getRefreshToken();\n    const userData = userDataManager.getUserData();\n    if (accessToken && refreshToken && userData) {\n      return {\n        accessToken,\n        refreshToken,\n        userData\n      };\n    }\n    return null;\n  }\n};\nexport default cookies;","map":{"version":3,"names":["Cookies","cookies","defaultOptions","path","secure","process","env","NODE_ENV","sameSite","tokenManager","setAccessToken","token","set","setRefreshToken","getAccessToken","get","getRefreshToken","updateTokens","access","refresh","removeTokens","remove","userDataManager","setUserData","userData","userInfo","id","is_superuser","is_active","role","phone_number","encoded","btoa","JSON","stringify","getUserData","parse","atob","e","removeUserData","sessionManager","saveSession","response","user","hasSession","accessToken","refreshToken","clearSession","restoreSession"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Config/cookies.js"],"sourcesContent":["import Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n// إعدادات الكوكيز الافتراضية\r\nconst defaultOptions = {\r\n  path: '/',\r\n  secure: process.env.NODE_ENV === 'production',\r\n  sameSite: 'strict'\r\n};\r\n\r\n// إدارة التوكنز\r\nexport const tokenManager = {\r\n  // تخزين access token\r\n  setAccessToken: (token) => {\r\n    cookies.set('access_token', token, defaultOptions);\r\n  },\r\n\r\n  // تخزين refresh token\r\n  setRefreshToken: (token) => {\r\n    cookies.set('refresh_token', token, defaultOptions);\r\n  },\r\n\r\n  // الحصول على access token\r\n  getAccessToken: () => {\r\n    return cookies.get('access_token');\r\n  },\r\n\r\n  // الحصول على refresh token\r\n  getRefreshToken: () => {\r\n    return cookies.get('refresh_token');\r\n  },\r\n\r\n  // تحديث التوكنز\r\n  updateTokens: (access, refresh) => {\r\n    cookies.set('access_token', access, defaultOptions);\r\n    cookies.set('refresh_token', refresh, defaultOptions);\r\n  },\r\n\r\n  // حذف التوكنز\r\n  removeTokens: () => {\r\n    cookies.remove('access_token', { path: '/' });\r\n    cookies.remove('refresh_token', { path: '/' });\r\n  }\r\n};\r\n\r\n// إدارة بيانات المستخدم مع تشفير Base64\r\nexport const userDataManager = {\r\n  // تخزين بيانات المستخدم\r\n  setUserData: (userData) => {\r\n    const userInfo = {\r\n      id: userData.id,\r\n      is_superuser: userData.is_superuser,\r\n      is_active: userData.is_active,\r\n      role: userData.role,\r\n      phone_number: userData.phone_number\r\n    };\r\n    // تشفير Base64\r\n    const encoded = btoa(JSON.stringify(userInfo));\r\n    cookies.set('user_data', encoded, defaultOptions);\r\n  },\r\n\r\n  // الحصول على بيانات المستخدم\r\n  getUserData: () => {\r\n    const encoded = cookies.get('user_data');\r\n    if (!encoded) return null;\r\n    try {\r\n      // فك التشفير Base64\r\n      return JSON.parse(atob(encoded));\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  // حذف بيانات المستخدم\r\n  removeUserData: () => {\r\n    cookies.remove('user_data', { path: '/' });\r\n  }\r\n};\r\n\r\n// إدارة الجلسة الكاملة\r\nexport const sessionManager = {\r\n  // حفظ جلسة كاملة\r\n  saveSession: (response) => {\r\n    const { access, refresh, user: userData } = response;\r\n    \r\n    tokenManager.setAccessToken(access);\r\n    tokenManager.setRefreshToken(refresh);\r\n    userDataManager.setUserData(userData);\r\n  },\r\n\r\n  // التحقق من وجود جلسة\r\n  hasSession: () => {\r\n    const accessToken = tokenManager.getAccessToken();\r\n    const refreshToken = tokenManager.getRefreshToken();\r\n    const userData = userDataManager.getUserData();\r\n    return !!(accessToken && refreshToken && userData);\r\n  },\r\n\r\n  // حذف الجلسة كاملة\r\n  clearSession: () => {\r\n    tokenManager.removeTokens();\r\n    userDataManager.removeUserData();\r\n  },\r\n\r\n  // استعادة الجلسة\r\n  restoreSession: () => {\r\n    const accessToken = tokenManager.getAccessToken();\r\n    const refreshToken = tokenManager.getRefreshToken();\r\n    const userData = userDataManager.getUserData();\r\n    \r\n    if (accessToken && refreshToken && userData) {\r\n      return {\r\n        accessToken,\r\n        refreshToken,\r\n        userData\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default cookies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}