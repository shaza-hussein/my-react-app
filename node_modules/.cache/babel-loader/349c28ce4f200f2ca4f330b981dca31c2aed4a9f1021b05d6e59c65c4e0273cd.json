{"ast":null,"code":"import Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n// إعدادات الكوكيز الافتراضية\nconst defaultOptions = {\n  path: '/',\n  secure: process.env.NODE_ENV === 'production',\n  // يعمل في التطوير والإنتاج\n  sameSite: 'strict'\n};\n\n// إعدادات بديلة للأمان العالي (إنتاج فقط)\nconst secureOptions = {\n  path: '/',\n  secure: true,\n  // يعمل فقط على HTTPS\n  sameSite: 'strict'\n};\n\n// إعدادات للتطوير فقط\nconst devOptions = {\n  path: '/',\n  secure: false,\n  // يعمل على HTTP و HTTPS\n  sameSite: 'strict'\n};\n\n// إدارة التوكنز\nexport const tokenManager = {\n  // تخزين access token\n  setAccessToken: token => {\n    cookies.set('access_token', token, defaultOptions);\n  },\n  // تخزين refresh token\n  setRefreshToken: token => {\n    cookies.set('refresh_token', token, defaultOptions);\n  },\n  // الحصول على access token\n  getAccessToken: () => {\n    return cookies.get('access_token');\n  },\n  // الحصول على refresh token\n  getRefreshToken: () => {\n    return cookies.get('refresh_token');\n  },\n  // تحديث التوكنز\n  updateTokens: (access, refresh) => {\n    cookies.set('access_token', access, defaultOptions);\n    cookies.set('refresh_token', refresh, defaultOptions);\n  },\n  // حذف التوكنز\n  removeTokens: () => {\n    cookies.remove('access_token', {\n      path: '/'\n    });\n    cookies.remove('refresh_token', {\n      path: '/'\n    });\n  }\n};\n\n// إدارة بيانات المستخدم\nexport const userDataManager = {\n  // تخزين بيانات المستخدم\n  setUserData: userData => {\n    const userInfo = {\n      id: userData.id,\n      is_superuser: userData.is_superuser,\n      is_active: userData.is_active,\n      role: userData.role\n    };\n    cookies.set('user_data', userInfo, defaultOptions);\n  },\n  // الحصول على بيانات المستخدم\n  getUserData: () => {\n    return cookies.get('user_data');\n  },\n  // حذف بيانات المستخدم\n  removeUserData: () => {\n    cookies.remove('user_data', {\n      path: '/'\n    });\n  }\n};\n\n// إدارة الجلسة الكاملة\nexport const sessionManager = {\n  // حفظ جلسة كاملة\n  saveSession: response => {\n    const {\n      access,\n      refresh,\n      user: userData\n    } = response;\n    tokenManager.setAccessToken(access);\n    tokenManager.setRefreshToken(refresh);\n    userDataManager.setUserData(userData);\n  },\n  // التحقق من وجود جلسة\n  hasSession: () => {\n    const accessToken = tokenManager.getAccessToken();\n    const userData = userDataManager.getUserData();\n    return !!(accessToken && userData);\n  },\n  // حذف الجلسة كاملة\n  clearSession: () => {\n    tokenManager.removeTokens();\n    userDataManager.removeUserData();\n  },\n  // استعادة الجلسة\n  restoreSession: () => {\n    const accessToken = tokenManager.getAccessToken();\n    const userData = userDataManager.getUserData();\n    if (accessToken && userData) {\n      return {\n        accessToken,\n        userData\n      };\n    }\n    return null;\n  }\n};\nexport default cookies;","map":{"version":3,"names":["Cookies","cookies","defaultOptions","path","secure","process","env","NODE_ENV","sameSite","secureOptions","devOptions","tokenManager","setAccessToken","token","set","setRefreshToken","getAccessToken","get","getRefreshToken","updateTokens","access","refresh","removeTokens","remove","userDataManager","setUserData","userData","userInfo","id","is_superuser","is_active","role","getUserData","removeUserData","sessionManager","saveSession","response","user","hasSession","accessToken","clearSession","restoreSession"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Config/cookies.js"],"sourcesContent":["import Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\n// إعدادات الكوكيز الافتراضية\r\nconst defaultOptions = {\r\n  path: '/',\r\n  secure: process.env.NODE_ENV === 'production', // يعمل في التطوير والإنتاج\r\n  sameSite: 'strict'\r\n};\r\n\r\n// إعدادات بديلة للأمان العالي (إنتاج فقط)\r\nconst secureOptions = {\r\n  path: '/',\r\n  secure: true, // يعمل فقط على HTTPS\r\n  sameSite: 'strict'\r\n};\r\n\r\n// إعدادات للتطوير فقط\r\nconst devOptions = {\r\n  path: '/',\r\n  secure: false, // يعمل على HTTP و HTTPS\r\n  sameSite: 'strict'\r\n};\r\n\r\n// إدارة التوكنز\r\nexport const tokenManager = {\r\n  // تخزين access token\r\n  setAccessToken: (token) => {\r\n    cookies.set('access_token', token, defaultOptions);\r\n  },\r\n\r\n  // تخزين refresh token\r\n  setRefreshToken: (token) => {\r\n    cookies.set('refresh_token', token, defaultOptions);\r\n  },\r\n\r\n  // الحصول على access token\r\n  getAccessToken: () => {\r\n    return cookies.get('access_token');\r\n  },\r\n\r\n  // الحصول على refresh token\r\n  getRefreshToken: () => {\r\n    return cookies.get('refresh_token');\r\n  },\r\n\r\n  // تحديث التوكنز\r\n  updateTokens: (access, refresh) => {\r\n    cookies.set('access_token', access, defaultOptions);\r\n    cookies.set('refresh_token', refresh, defaultOptions);\r\n  },\r\n\r\n  // حذف التوكنز\r\n  removeTokens: () => {\r\n    cookies.remove('access_token', { path: '/' });\r\n    cookies.remove('refresh_token', { path: '/' });\r\n  }\r\n};\r\n\r\n// إدارة بيانات المستخدم\r\nexport const userDataManager = {\r\n  // تخزين بيانات المستخدم\r\n  setUserData: (userData) => {\r\n    const userInfo = {\r\n      id: userData.id,\r\n      is_superuser: userData.is_superuser,\r\n      is_active: userData.is_active,\r\n      role: userData.role\r\n    };\r\n    cookies.set('user_data', userInfo, defaultOptions);\r\n  },\r\n\r\n  // الحصول على بيانات المستخدم\r\n  getUserData: () => {\r\n    return cookies.get('user_data');\r\n  },\r\n\r\n  // حذف بيانات المستخدم\r\n  removeUserData: () => {\r\n    cookies.remove('user_data', { path: '/' });\r\n  }\r\n};\r\n\r\n// إدارة الجلسة الكاملة\r\nexport const sessionManager = {\r\n  // حفظ جلسة كاملة\r\n  saveSession: (response) => {\r\n    const { access, refresh, user: userData } = response;\r\n    \r\n    tokenManager.setAccessToken(access);\r\n    tokenManager.setRefreshToken(refresh);\r\n    userDataManager.setUserData(userData);\r\n  },\r\n\r\n  // التحقق من وجود جلسة\r\n  hasSession: () => {\r\n    const accessToken = tokenManager.getAccessToken();\r\n    const userData = userDataManager.getUserData();\r\n    return !!(accessToken && userData);\r\n  },\r\n\r\n  // حذف الجلسة كاملة\r\n  clearSession: () => {\r\n    tokenManager.removeTokens();\r\n    userDataManager.removeUserData();\r\n  },\r\n\r\n  // استعادة الجلسة\r\n  restoreSession: () => {\r\n    const accessToken = tokenManager.getAccessToken();\r\n    const userData = userDataManager.getUserData();\r\n    \r\n    if (accessToken && userData) {\r\n      return {\r\n        accessToken,\r\n        userData\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default cookies; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}