{"ast":null,"code":"import { refreshToken } from '../API/Auth';\nimport { sessionManager } from '../Config/cookies';\n\n// ŸÖÿπÿßŸÑÿ¨ÿ© ÿÆÿ∑ÿ£ 401 (ÿ∫Ÿäÿ± ŸÖÿµÿ±ÿ≠)\nexport const handleUnauthorizedError = async (error, originalRequest, axiosInstance) => {\n  // ÿ•ÿ∞ÿß ŸÑŸÖ ŸÜŸÉŸÜ ŸÇÿØ ÿ≠ÿßŸàŸÑŸÜÿß ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÜ ŸÇÿ®ŸÑ\n  if (!originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const session = sessionManager.restoreSession();\n      const refreshTokenValue = session === null || session === void 0 ? void 0 : session.refreshToken;\n      if (refreshTokenValue) {\n        console.log('üîÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ...');\n\n        // ÿ∑ŸÑÿ® ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\n        const response = await refreshToken(refreshTokenValue);\n\n        // ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜÿ≤ ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤\n        sessionManager.saveSession({\n          access: response.access,\n          refresh: response.refresh,\n          user: session.userData\n        });\n\n        // ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑÿ£ÿµŸÑŸä ŸÖÿπ ÿßŸÑÿ™ŸàŸÉŸÜ ÿßŸÑÿ¨ÿØŸäÿØ\n        originalRequest.headers.Authorization = `Bearer ${response.access}`;\n        console.log('‚úÖ ÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ Ÿàÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ®');\n        return axiosInstance(originalRequest);\n      }\n    } catch (refreshError) {\n      console.log('‚ùå ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ:', refreshError);\n      handleRefreshTokenFailure();\n    }\n  }\n\n  // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ ÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ£Ÿà ÿ™ŸÖÿ™ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖŸÜ ŸÇÿ®ŸÑ\n  handleRefreshTokenFailure();\n  return Promise.reject(error);\n};\n\n// ŸÖÿπÿßŸÑÿ¨ÿ© ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\nexport const handleRefreshTokenFailure = () => {\n  console.log('üßπ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ© ÿ®ÿ≥ÿ®ÿ® ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ');\n  sessionManager.clearSession();\n\n  // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ≠ÿØÿ´ ŸÑÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ©\n  window.dispatchEvent(new CustomEvent('sessionExpired'));\n};\n\n// ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿπÿßŸÖÿ©\nexport const handleError = error => {\n  var _error$response;\n  console.log('‚ùå ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ∑ŸÑÿ®:', error);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    handleRefreshTokenFailure();\n  }\n  return Promise.reject(error);\n};\n\n// Ÿáÿ∞ÿß ÿßŸÑŸÇÿØŸäŸÖ ŸÇÿ®ŸÑ ŸÖÿß ÿ™ŸÜŸÇŸÑŸä ŸÖŸÉÿßŸÜ ÿßŸÑŸÖŸÑŸÅ ŸÖŸÜ config\n// import { refreshToken } from '../API/Auth';\n// import { tokenManager, sessionManager } from './cookies';\n\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ÿÆÿ∑ÿ£ 401 (ÿ∫Ÿäÿ± ŸÖÿµÿ±ÿ≠)\n// export const handleUnauthorizedError = async (error, originalRequest, axiosInstance) => {\n//   // ÿ•ÿ∞ÿß ŸÑŸÖ ŸÜŸÉŸÜ ŸÇÿØ ÿ≠ÿßŸàŸÑŸÜÿß ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÜ ŸÇÿ®ŸÑ\n//   if (!originalRequest._retry) {\n//     originalRequest._retry = true;\n\n//     try {\n//       const refreshTokenValue = tokenManager.getRefreshToken();\n//       if (refreshTokenValue) {\n//         console.log('üîÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ...');\n\n//         // ÿ∑ŸÑÿ® ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\n//         const response = await refreshToken(refreshTokenValue);\n\n//         // ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜÿ≤ ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤\n//         tokenManager.updateTokens(response.access, response.refresh);\n\n//         // ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑÿ£ÿµŸÑŸä ŸÖÿπ ÿßŸÑÿ™ŸàŸÉŸÜ ÿßŸÑÿ¨ÿØŸäÿØ\n//         originalRequest.headers.Authorization = `Bearer ${response.access}`;\n//         console.log('‚úÖ ÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ Ÿàÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ®');\n\n//         return axiosInstance(originalRequest);\n//       }\n//     } catch (refreshError) {\n//       console.log('‚ùå ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ:', refreshError);\n//       handleRefreshTokenFailure();\n//     }\n//   }\n\n//   // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ ÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ£Ÿà ÿ™ŸÖÿ™ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖŸÜ ŸÇÿ®ŸÑ\n//   handleRefreshTokenFailure();\n//   return Promise.reject(error);\n// };\n\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\n// export const handleRefreshTokenFailure = () => {\n//   console.log('üßπ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ© ÿ®ÿ≥ÿ®ÿ® ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ');\n//   sessionManager.clearSession();\n\n//   // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ≠ÿØÿ´ ŸÑÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ©\n//   window.dispatchEvent(new CustomEvent('sessionExpired'));\n// };\n\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿπÿßŸÖÿ©\n// export const handleError = (error) => {\n//   console.log('‚ùå ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ∑ŸÑÿ®:', error);\n\n//   if (error.response?.status === 401) {\n//     handleRefreshTokenFailure();\n//   }\n\n//   return Promise.reject(error);\n// };","map":{"version":3,"names":["refreshToken","sessionManager","handleUnauthorizedError","error","originalRequest","axiosInstance","_retry","session","restoreSession","refreshTokenValue","console","log","response","saveSession","access","refresh","user","userData","headers","Authorization","refreshError","handleRefreshTokenFailure","Promise","reject","clearSession","window","dispatchEvent","CustomEvent","handleError","_error$response","status"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Utils/errorHandler.js"],"sourcesContent":["import { refreshToken } from '../API/Auth';\r\nimport { sessionManager } from '../Config/cookies';\r\n\r\n// ŸÖÿπÿßŸÑÿ¨ÿ© ÿÆÿ∑ÿ£ 401 (ÿ∫Ÿäÿ± ŸÖÿµÿ±ÿ≠)\r\nexport const handleUnauthorizedError = async (error, originalRequest, axiosInstance) => {\r\n  // ÿ•ÿ∞ÿß ŸÑŸÖ ŸÜŸÉŸÜ ŸÇÿØ ÿ≠ÿßŸàŸÑŸÜÿß ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÜ ŸÇÿ®ŸÑ\r\n  if (!originalRequest._retry) {\r\n    originalRequest._retry = true;\r\n\r\n    try {\r\n      const session = sessionManager.restoreSession();\r\n      const refreshTokenValue = session?.refreshToken;\r\n      \r\n      if (refreshTokenValue) {\r\n        console.log('üîÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ...');\r\n        \r\n        // ÿ∑ŸÑÿ® ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\r\n        const response = await refreshToken(refreshTokenValue);\r\n        \r\n        // ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜÿ≤ ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤\r\n        sessionManager.saveSession({\r\n          access: response.access,\r\n          refresh: response.refresh,\r\n          user: session.userData\r\n        });\r\n        \r\n        // ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑÿ£ÿµŸÑŸä ŸÖÿπ ÿßŸÑÿ™ŸàŸÉŸÜ ÿßŸÑÿ¨ÿØŸäÿØ\r\n        originalRequest.headers.Authorization = `Bearer ${response.access}`;\r\n        console.log('‚úÖ ÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ Ÿàÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ®');\r\n        \r\n        return axiosInstance(originalRequest);\r\n      }\r\n    } catch (refreshError) {\r\n      console.log('‚ùå ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ:', refreshError);\r\n      handleRefreshTokenFailure();\r\n    }\r\n  }\r\n\r\n  // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ ÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ£Ÿà ÿ™ŸÖÿ™ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖŸÜ ŸÇÿ®ŸÑ\r\n  handleRefreshTokenFailure();\r\n  return Promise.reject(error);\r\n};\r\n\r\n// ŸÖÿπÿßŸÑÿ¨ÿ© ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\r\nexport const handleRefreshTokenFailure = () => {\r\n  console.log('üßπ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ© ÿ®ÿ≥ÿ®ÿ® ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ');\r\n  sessionManager.clearSession();\r\n  \r\n  // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ≠ÿØÿ´ ŸÑÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ©\r\n  window.dispatchEvent(new CustomEvent('sessionExpired'));\r\n};\r\n\r\n// ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿπÿßŸÖÿ©\r\nexport const handleError = (error) => {\r\n  console.log('‚ùå ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ∑ŸÑÿ®:', error);\r\n  \r\n  if (error.response?.status === 401) {\r\n    handleRefreshTokenFailure();\r\n  }\r\n  \r\n  return Promise.reject(error);\r\n}; \r\n\r\n\r\n// Ÿáÿ∞ÿß ÿßŸÑŸÇÿØŸäŸÖ ŸÇÿ®ŸÑ ŸÖÿß ÿ™ŸÜŸÇŸÑŸä ŸÖŸÉÿßŸÜ ÿßŸÑŸÖŸÑŸÅ ŸÖŸÜ config\r\n// import { refreshToken } from '../API/Auth';\r\n// import { tokenManager, sessionManager } from './cookies';\r\n\r\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ÿÆÿ∑ÿ£ 401 (ÿ∫Ÿäÿ± ŸÖÿµÿ±ÿ≠)\r\n// export const handleUnauthorizedError = async (error, originalRequest, axiosInstance) => {\r\n//   // ÿ•ÿ∞ÿß ŸÑŸÖ ŸÜŸÉŸÜ ŸÇÿØ ÿ≠ÿßŸàŸÑŸÜÿß ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ ŸÖŸÜ ŸÇÿ®ŸÑ\r\n//   if (!originalRequest._retry) {\r\n//     originalRequest._retry = true;\r\n\r\n//     try {\r\n//       const refreshTokenValue = tokenManager.getRefreshToken();\r\n//       if (refreshTokenValue) {\r\n//         console.log('üîÑ ŸÖÿ≠ÿßŸàŸÑÿ© ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ...');\r\n        \r\n//         // ÿ∑ŸÑÿ® ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\r\n//         const response = await refreshToken(refreshTokenValue);\r\n        \r\n//         // ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜÿ≤ ŸÅŸä ÿßŸÑŸÉŸàŸÉŸäÿ≤\r\n//         tokenManager.updateTokens(response.access, response.refresh);\r\n        \r\n//         // ÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ® ÿßŸÑÿ£ÿµŸÑŸä ŸÖÿπ ÿßŸÑÿ™ŸàŸÉŸÜ ÿßŸÑÿ¨ÿØŸäÿØ\r\n//         originalRequest.headers.Authorization = `Bearer ${response.access}`;\r\n//         console.log('‚úÖ ÿ™ŸÖ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ Ÿàÿ•ÿπÿßÿØÿ© ÿßŸÑÿ∑ŸÑÿ®');\r\n        \r\n//         return axiosInstance(originalRequest);\r\n//       }\r\n//     } catch (refreshError) {\r\n//       console.log('‚ùå ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ:', refreshError);\r\n//       handleRefreshTokenFailure();\r\n//     }\r\n//   }\r\n\r\n//   // ÿ•ÿ∞ÿß ŸÅÿ¥ŸÑ ÿßŸÑÿ™ÿ≠ÿØŸäÿ´ ÿ£Ÿà ÿ™ŸÖÿ™ ÿßŸÑŸÖÿ≠ÿßŸàŸÑÿ© ŸÖŸÜ ŸÇÿ®ŸÑ\r\n//   handleRefreshTokenFailure();\r\n//   return Promise.reject(error);\r\n// };\r\n\r\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ\r\n// export const handleRefreshTokenFailure = () => {\r\n//   console.log('üßπ ÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ© ÿ®ÿ≥ÿ®ÿ® ŸÅÿ¥ŸÑ ÿ™ÿ≠ÿØŸäÿ´ ÿßŸÑÿ™ŸàŸÉŸÜ');\r\n//   sessionManager.clearSession();\r\n  \r\n//   // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ≠ÿØÿ´ ŸÑÿ≠ÿ∞ŸÅ ÿßŸÑÿ¨ŸÑÿ≥ÿ©\r\n//   window.dispatchEvent(new CustomEvent('sessionExpired'));\r\n// };\r\n\r\n// // ŸÖÿπÿßŸÑÿ¨ÿ© ÿ£ÿÆÿ∑ÿßÿ° ÿπÿßŸÖÿ©\r\n// export const handleError = (error) => {\r\n//   console.log('‚ùå ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑÿ∑ŸÑÿ®:', error);\r\n  \r\n//   if (error.response?.status === 401) {\r\n//     handleRefreshTokenFailure();\r\n//   }\r\n  \r\n//   return Promise.reject(error);\r\n// }; "],"mappings":"AAAA,SAASA,YAAY,QAAQ,aAAa;AAC1C,SAASC,cAAc,QAAQ,mBAAmB;;AAElD;AACA,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,eAAe,EAAEC,aAAa,KAAK;EACtF;EACA,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC3BF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,OAAO,GAAGN,cAAc,CAACO,cAAc,CAAC,CAAC;MAC/C,MAAMC,iBAAiB,GAAGF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEP,YAAY;MAE/C,IAAIS,iBAAiB,EAAE;QACrBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;QAExC;QACA,MAAMC,QAAQ,GAAG,MAAMZ,YAAY,CAACS,iBAAiB,CAAC;;QAEtD;QACAR,cAAc,CAACY,WAAW,CAAC;UACzBC,MAAM,EAAEF,QAAQ,CAACE,MAAM;UACvBC,OAAO,EAAEH,QAAQ,CAACG,OAAO;UACzBC,IAAI,EAAET,OAAO,CAACU;QAChB,CAAC,CAAC;;QAEF;QACAb,eAAe,CAACc,OAAO,CAACC,aAAa,GAAG,UAAUP,QAAQ,CAACE,MAAM,EAAE;QACnEJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;QAE7C,OAAON,aAAa,CAACD,eAAe,CAAC;MACvC;IACF,CAAC,CAAC,OAAOgB,YAAY,EAAE;MACrBV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAES,YAAY,CAAC;MAChDC,yBAAyB,CAAC,CAAC;IAC7B;EACF;;EAEA;EACAA,yBAAyB,CAAC,CAAC;EAC3B,OAAOC,OAAO,CAACC,MAAM,CAACpB,KAAK,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMkB,yBAAyB,GAAGA,CAAA,KAAM;EAC7CX,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAClDV,cAAc,CAACuB,YAAY,CAAC,CAAC;;EAE7B;EACAC,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,gBAAgB,CAAC,CAAC;AACzD,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAIzB,KAAK,IAAK;EAAA,IAAA0B,eAAA;EACpCnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,KAAK,CAAC;EAErC,IAAI,EAAA0B,eAAA,GAAA1B,KAAK,CAACS,QAAQ,cAAAiB,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCT,yBAAyB,CAAC,CAAC;EAC7B;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACpB,KAAK,CAAC;AAC9B,CAAC;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}