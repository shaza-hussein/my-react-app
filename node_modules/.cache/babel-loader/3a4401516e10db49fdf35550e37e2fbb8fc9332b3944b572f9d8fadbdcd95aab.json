{"ast":null,"code":"import axiosInstance from '../Config/axios';\nimport { LOGOUT, USER_PROFILE, UPDATE_USER_PROFILE, ACTIVATE_USER, DISABLE_USER, USER_REFERRAL, REMOVE_USER_REFERRAL, CHANGE_PASSWORD, LIST_USERS } from \"./Api\";\n\n// تسجيل الخروج - طلب محمي\nexport const logoutUser = async () => {\n  try {\n    // الحصول على refresh token من الجلسة\n    const {\n      sessionManager\n    } = await import('../Config/cookies');\n    const session = sessionManager.restoreSession();\n    const refreshToken = session === null || session === void 0 ? void 0 : session.refreshToken;\n    if (!refreshToken) {\n      console.log('⚠️ لا يوجد refresh token، سيتم حذف الجلسة المحلية فقط');\n      return {\n        message: 'تم حذف الجلسة المحلية'\n      };\n    }\n    console.log('🔄 إرسال طلب تسجيل الخروج مع refresh token');\n    const response = await axiosInstance.post(LOGOUT, {\n      refresh: refreshToken\n    });\n    console.log('✅ تم تسجيل الخروج بنجاح:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.log('❌ خطأ في تسجيل الخروج:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n    throw error;\n  }\n};\n\n// الحصول على الملف الشخصي - طلب محمي\nexport const getUserProfile = async () => {\n  const response = await axiosInstance.get(USER_PROFILE);\n  return response.data;\n};\n\n// تحديث الملف الشخصي - طلب محمي\nexport const updateUserProfile = async data => {\n  const response = await axiosInstance.put(UPDATE_USER_PROFILE, data);\n  return response.data;\n};\n\n// تفعيل المستخدم - طلب محمي (للمشرفين)\nexport const activateUser = async userId => {\n  const response = await axiosInstance.post(ACTIVATE_USER(userId));\n  return response.data;\n};\n\n// تعطيل المستخدم - طلب محمي (للمشرفين)\nexport const disableUser = async userId => {\n  const response = await axiosInstance.post(DISABLE_USER(userId));\n  return response.data;\n};\n\n// إضافة مرجع للمستخدم - طلب محمي (للمشرفين)\nexport const addUserReferral = async (userId, referralData) => {\n  const response = await axiosInstance.post(USER_REFERRAL(userId), referralData);\n  return response.data;\n};\n\n// إزالة مرجع المستخدم - طلب محمي (للمشرفين)\nexport const removeUserReferral = async userId => {\n  const response = await axiosInstance.delete(REMOVE_USER_REFERRAL(userId));\n  return response.data;\n};\n\n// تغيير كلمة المرور - طلب محمي\nexport const changePassword = async data => {\n  const response = await axiosInstance.post(CHANGE_PASSWORD, data);\n  return response.data;\n};\n\n// جلب قائمة المستخدمين - طلب محمي (للمشرفين)\nexport const getUsersList = async (params = {}) => {\n  var _data$results, _data$count, _data$next, _data$previous;\n  const response = await axiosInstance.get(LIST_USERS, {\n    params\n  });\n  const data = response.data;\n  // تطبيع الاستجابة إلى شكل موحّد لطبقة العرض\n  return {\n    users: (_data$results = data.results) !== null && _data$results !== void 0 ? _data$results : [],\n    total: (_data$count = data.count) !== null && _data$count !== void 0 ? _data$count : 0,\n    next: (_data$next = data.next) !== null && _data$next !== void 0 ? _data$next : null,\n    previous: (_data$previous = data.previous) !== null && _data$previous !== void 0 ? _data$previous : null\n  };\n};","map":{"version":3,"names":["axiosInstance","LOGOUT","USER_PROFILE","UPDATE_USER_PROFILE","ACTIVATE_USER","DISABLE_USER","USER_REFERRAL","REMOVE_USER_REFERRAL","CHANGE_PASSWORD","LIST_USERS","logoutUser","sessionManager","session","restoreSession","refreshToken","console","log","message","response","post","refresh","data","error","_error$response","_error$response2","status","getUserProfile","get","updateUserProfile","put","activateUser","userId","disableUser","addUserReferral","referralData","removeUserReferral","delete","changePassword","getUsersList","params","_data$results","_data$count","_data$next","_data$previous","users","results","total","count","next","previous"],"sources":["C:/Users/shaza/Desktop/test for NO/src/API/ProtectedAuth.js"],"sourcesContent":["import axiosInstance from '../Config/axios';\r\nimport {\r\n  LOGOUT,\r\n  USER_PROFILE,\r\n  UPDATE_USER_PROFILE,\r\n  ACTIVATE_USER,\r\n  DISABLE_USER,\r\n  USER_REFERRAL,\r\n  REMOVE_USER_REFERRAL,\r\n  CHANGE_PASSWORD,\r\n  LIST_USERS\r\n} from \"./Api\";\r\n\r\n// تسجيل الخروج - طلب محمي\r\nexport const logoutUser = async () => {\r\n  try {\r\n    // الحصول على refresh token من الجلسة\r\n    const { sessionManager } = await import('../Config/cookies');\r\n    const session = sessionManager.restoreSession();\r\n    const refreshToken = session?.refreshToken;\r\n    \r\n    if (!refreshToken) {\r\n      console.log('⚠️ لا يوجد refresh token، سيتم حذف الجلسة المحلية فقط');\r\n      return { message: 'تم حذف الجلسة المحلية' };\r\n    }\r\n    \r\n    console.log('🔄 إرسال طلب تسجيل الخروج مع refresh token');\r\n    const response = await axiosInstance.post(LOGOUT, { \r\n      refresh: refreshToken \r\n    });\r\n    \r\n    console.log('✅ تم تسجيل الخروج بنجاح:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log('❌ خطأ في تسجيل الخروج:', error.response?.status, error.response?.data);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// الحصول على الملف الشخصي - طلب محمي\r\nexport const getUserProfile = async () => {\r\n  const response = await axiosInstance.get(USER_PROFILE);\r\n  return response.data;\r\n};\r\n\r\n// تحديث الملف الشخصي - طلب محمي\r\nexport const updateUserProfile = async (data) => {\r\n  const response = await axiosInstance.put(UPDATE_USER_PROFILE, data);\r\n  return response.data;\r\n};\r\n\r\n// تفعيل المستخدم - طلب محمي (للمشرفين)\r\nexport const activateUser = async (userId) => {\r\n  const response = await axiosInstance.post(ACTIVATE_USER(userId));\r\n  return response.data;\r\n};\r\n\r\n// تعطيل المستخدم - طلب محمي (للمشرفين)\r\nexport const disableUser = async (userId) => {\r\n  const response = await axiosInstance.post(DISABLE_USER(userId));\r\n  return response.data;\r\n};\r\n\r\n// إضافة مرجع للمستخدم - طلب محمي (للمشرفين)\r\nexport const addUserReferral = async (userId, referralData) => {\r\n  const response = await axiosInstance.post(USER_REFERRAL(userId), referralData);\r\n  return response.data;\r\n};\r\n\r\n// إزالة مرجع المستخدم - طلب محمي (للمشرفين)\r\nexport const removeUserReferral = async (userId) => {\r\n  const response = await axiosInstance.delete(REMOVE_USER_REFERRAL(userId));\r\n  return response.data;\r\n}; \r\n\r\n// تغيير كلمة المرور - طلب محمي\r\nexport const changePassword = async (data) => {\r\n  const response = await axiosInstance.post(CHANGE_PASSWORD, data);\r\n  return response.data;\r\n};\r\n\r\n// جلب قائمة المستخدمين - طلب محمي (للمشرفين)\r\nexport const getUsersList = async (params = {}) => {\r\n  const response = await axiosInstance.get(LIST_USERS, { params });\r\n  const data = response.data;\r\n  // تطبيع الاستجابة إلى شكل موحّد لطبقة العرض\r\n  return {\r\n    users: data.results ?? [],\r\n    total: data.count ?? 0,\r\n    next: data.next ?? null,\r\n    previous: data.previous ?? null,\r\n  };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}