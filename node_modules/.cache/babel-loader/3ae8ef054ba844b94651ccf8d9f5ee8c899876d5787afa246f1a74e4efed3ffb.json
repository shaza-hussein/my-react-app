{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuth } from '../Context/AuthContext';\nimport { handleLogoutError, validateSessionBeforeLogout, cleanupAfterLogout } from '../Utils/logoutHelper';\nexport default function useLogout() {\n  _s();\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\n  const [error, setError] = useState(null);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {\n    logout\n  } = useAuth();\n\n  // فتح النافذة المنبثقة\n  const openConfirmModal = () => {\n    setShowConfirmModal(true);\n  };\n\n  // إغلاق النافذة المنبثقة\n  const closeConfirmModal = () => {\n    if (!isLoggingOut) {\n      setShowConfirmModal(false);\n    }\n  };\n\n  // تأكيد تسجيل الخروج\n  const confirmLogout = async () => {\n    if (isLoggingOut) return; // منع النقر المتكرر\n\n    setIsLoggingOut(true);\n    setError(null);\n    try {\n      // التحقق من صحة الجلسة قبل تسجيل الخروج\n      if (!validateSessionBeforeLogout()) {\n        console.log('⚠️ جلسة غير صالحة، سيتم حذف الجلسة المحلية فقط');\n        await logout();\n        return;\n      }\n\n      // تسجيل الخروج\n      await logout();\n\n      // تنظيف البيانات المحلية\n      cleanupAfterLogout();\n    } catch (error) {\n      // معالجة الأخطاء باستخدام الدالة المساعدة\n      const errorInfo = handleLogoutError(error);\n      setError(errorInfo.message);\n      setIsLoggingOut(false);\n\n      // في حالة خطأ 401، نستمر في حذف الجلسة المحلية\n      if (errorInfo.status === 401) {\n        console.log('🔑 التوكن منتهي الصلاحية، سيتم حذف الجلسة المحلية');\n        try {\n          await logout();\n        } catch (localLogoutError) {\n          console.error('خطأ في حذف الجلسة المحلية:', localLogoutError);\n        }\n      }\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  return {\n    isLoggingOut,\n    error,\n    showConfirmModal,\n    openConfirmModal,\n    closeConfirmModal,\n    confirmLogout,\n    clearError\n  };\n}\n_s(useLogout, \"jEaAn0DArvvGToSCWZ8ZSv0mCsk=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useState","useAuth","handleLogoutError","validateSessionBeforeLogout","cleanupAfterLogout","useLogout","_s","isLoggingOut","setIsLoggingOut","error","setError","showConfirmModal","setShowConfirmModal","logout","openConfirmModal","closeConfirmModal","confirmLogout","console","log","errorInfo","message","status","localLogoutError","clearError"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Hooks/useLogout.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuth } from '../Context/AuthContext';\r\nimport { handleLogoutError, validateSessionBeforeLogout, cleanupAfterLogout } from '../Utils/logoutHelper';\r\n\r\nexport default function useLogout() {\r\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const { logout } = useAuth();\r\n\r\n  // فتح النافذة المنبثقة\r\n  const openConfirmModal = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  // إغلاق النافذة المنبثقة\r\n  const closeConfirmModal = () => {\r\n    if (!isLoggingOut) {\r\n      setShowConfirmModal(false);\r\n    }\r\n  };\r\n\r\n  // تأكيد تسجيل الخروج\r\n  const confirmLogout = async () => {\r\n    if (isLoggingOut) return; // منع النقر المتكرر\r\n    \r\n    setIsLoggingOut(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // التحقق من صحة الجلسة قبل تسجيل الخروج\r\n      if (!validateSessionBeforeLogout()) {\r\n        console.log('⚠️ جلسة غير صالحة، سيتم حذف الجلسة المحلية فقط');\r\n        await logout();\r\n        return;\r\n      }\r\n      \r\n      // تسجيل الخروج\r\n      await logout();\r\n      \r\n      // تنظيف البيانات المحلية\r\n      cleanupAfterLogout();\r\n      \r\n    } catch (error) {\r\n      // معالجة الأخطاء باستخدام الدالة المساعدة\r\n      const errorInfo = handleLogoutError(error);\r\n      setError(errorInfo.message);\r\n      setIsLoggingOut(false);\r\n      \r\n      // في حالة خطأ 401، نستمر في حذف الجلسة المحلية\r\n      if (errorInfo.status === 401) {\r\n        console.log('🔑 التوكن منتهي الصلاحية، سيتم حذف الجلسة المحلية');\r\n        try {\r\n          await logout();\r\n        } catch (localLogoutError) {\r\n          console.error('خطأ في حذف الجلسة المحلية:', localLogoutError);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return {\r\n    isLoggingOut,\r\n    error,\r\n    showConfirmModal,\r\n    openConfirmModal,\r\n    closeConfirmModal,\r\n    confirmLogout,\r\n    clearError\r\n  };\r\n} "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,iBAAiB,EAAEC,2BAA2B,EAAEC,kBAAkB,QAAQ,uBAAuB;AAE1G,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM;IAAEa;EAAO,CAAC,GAAGZ,OAAO,CAAC,CAAC;;EAE5B;EACA,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACR,YAAY,EAAE;MACjBK,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAIT,YAAY,EAAE,OAAO,CAAC;;IAE1BC,eAAe,CAAC,IAAI,CAAC;IACrBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,IAAI,CAACP,2BAA2B,CAAC,CAAC,EAAE;QAClCc,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;QAC7D,MAAML,MAAM,CAAC,CAAC;QACd;MACF;;MAEA;MACA,MAAMA,MAAM,CAAC,CAAC;;MAEd;MACAT,kBAAkB,CAAC,CAAC;IAEtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMU,SAAS,GAAGjB,iBAAiB,CAACO,KAAK,CAAC;MAC1CC,QAAQ,CAACS,SAAS,CAACC,OAAO,CAAC;MAC3BZ,eAAe,CAAC,KAAK,CAAC;;MAEtB;MACA,IAAIW,SAAS,CAACE,MAAM,KAAK,GAAG,EAAE;QAC5BJ,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;QAChE,IAAI;UACF,MAAML,MAAM,CAAC,CAAC;QAChB,CAAC,CAAC,OAAOS,gBAAgB,EAAE;UACzBL,OAAO,CAACR,KAAK,CAAC,4BAA4B,EAAEa,gBAAgB,CAAC;QAC/D;MACF;IACF;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBb,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,OAAO;IACLH,YAAY;IACZE,KAAK;IACLE,gBAAgB;IAChBG,gBAAgB;IAChBC,iBAAiB;IACjBC,aAAa;IACbO;EACF,CAAC;AACH;AAACjB,EAAA,CAtEuBD,SAAS;EAAA,QAIZJ,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}