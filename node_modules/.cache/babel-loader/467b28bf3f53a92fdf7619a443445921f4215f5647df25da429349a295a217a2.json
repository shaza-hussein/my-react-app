{"ast":null,"code":"// src/Utils/logoutHelper.js\n\n// معالجة أخطاء تسجيل الخروج\nexport const handleLogoutError = error => {\n  var _error$response, _error$response2, _error$response3, _error$response4, _error$response5;\n  console.error('خطأ في تسجيل الخروج:', error);\n  let errorMessage = 'حدث خطأ أثناء تسجيل الخروج';\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 400) {\n    errorMessage = 'خطأ في البيانات المرسلة للخادم';\n    console.log('❌ خطأ في البيانات المرسلة للخادم');\n  } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    errorMessage = 'التوكن منتهي الصلاحية';\n    console.log('❌ التوكن منتهي الصلاحية');\n  } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403) {\n    errorMessage = 'غير مصرح لك بتسجيل الخروج';\n    console.log('❌ غير مصرح لك بتسجيل الخروج');\n  } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) >= 500) {\n    errorMessage = 'خطأ في الخادم، يرجى المحاولة لاحقاً';\n    console.log('❌ خطأ في الخادم');\n  } else if (!error.response) {\n    errorMessage = 'خطأ في الاتصال بالخادم';\n    console.log('❌ خطأ في الاتصال بالخادم');\n  }\n  return {\n    message: errorMessage,\n    status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status,\n    originalError: error\n  };\n};\n\n// التحقق من صحة الجلسة قبل تسجيل الخروج\nexport const validateSessionBeforeLogout = () => {\n  const {\n    sessionManager\n  } = require('../Config/cookies');\n  const session = sessionManager.restoreSession();\n  if (!session) {\n    console.log('⚠️ لا توجد جلسة للخروج منها');\n    return false;\n  }\n  if (!session.refreshToken) {\n    console.log('⚠️ لا يوجد refresh token للخروج');\n    return false;\n  }\n  return true;\n};\n\n// تنظيف البيانات المحلية بعد تسجيل الخروج\nexport const cleanupAfterLogout = () => {\n  console.log('🧹 تنظيف البيانات المحلية بعد تسجيل الخروج');\n\n  // يمكن إضافة تنظيف إضافي هنا مثل:\n  // - حذف البيانات من localStorage\n  // - إعادة تعيين متغيرات التطبيق\n  // - إلغاء الطلبات المعلقة\n\n  return true;\n};","map":{"version":3,"names":["handleLogoutError","error","_error$response","_error$response2","_error$response3","_error$response4","_error$response5","console","errorMessage","response","status","log","message","originalError","validateSessionBeforeLogout","sessionManager","require","session","restoreSession","refreshToken","cleanupAfterLogout"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Utils/logoutHelper.js"],"sourcesContent":["// src/Utils/logoutHelper.js\r\n\r\n// معالجة أخطاء تسجيل الخروج\r\nexport const handleLogoutError = (error) => {\r\n  console.error('خطأ في تسجيل الخروج:', error);\r\n  \r\n  let errorMessage = 'حدث خطأ أثناء تسجيل الخروج';\r\n  \r\n  if (error.response?.status === 400) {\r\n    errorMessage = 'خطأ في البيانات المرسلة للخادم';\r\n    console.log('❌ خطأ في البيانات المرسلة للخادم');\r\n  } else if (error.response?.status === 401) {\r\n    errorMessage = 'التوكن منتهي الصلاحية';\r\n    console.log('❌ التوكن منتهي الصلاحية');\r\n  } else if (error.response?.status === 403) {\r\n    errorMessage = 'غير مصرح لك بتسجيل الخروج';\r\n    console.log('❌ غير مصرح لك بتسجيل الخروج');\r\n  } else if (error.response?.status >= 500) {\r\n    errorMessage = 'خطأ في الخادم، يرجى المحاولة لاحقاً';\r\n    console.log('❌ خطأ في الخادم');\r\n  } else if (!error.response) {\r\n    errorMessage = 'خطأ في الاتصال بالخادم';\r\n    console.log('❌ خطأ في الاتصال بالخادم');\r\n  }\r\n  \r\n  return {\r\n    message: errorMessage,\r\n    status: error.response?.status,\r\n    originalError: error\r\n  };\r\n};\r\n\r\n// التحقق من صحة الجلسة قبل تسجيل الخروج\r\nexport const validateSessionBeforeLogout = () => {\r\n  const { sessionManager } = require('../Config/cookies');\r\n  const session = sessionManager.restoreSession();\r\n  \r\n  if (!session) {\r\n    console.log('⚠️ لا توجد جلسة للخروج منها');\r\n    return false;\r\n  }\r\n  \r\n  if (!session.refreshToken) {\r\n    console.log('⚠️ لا يوجد refresh token للخروج');\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n// تنظيف البيانات المحلية بعد تسجيل الخروج\r\nexport const cleanupAfterLogout = () => {\r\n  console.log('🧹 تنظيف البيانات المحلية بعد تسجيل الخروج');\r\n  \r\n  // يمكن إضافة تنظيف إضافي هنا مثل:\r\n  // - حذف البيانات من localStorage\r\n  // - إعادة تعيين متغيرات التطبيق\r\n  // - إلغاء الطلبات المعلقة\r\n  \r\n  return true;\r\n}; "],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAIC,KAAK,IAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC1CC,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAE5C,IAAIO,YAAY,GAAG,4BAA4B;EAE/C,IAAI,EAAAN,eAAA,GAAAD,KAAK,CAACQ,QAAQ,cAAAP,eAAA,uBAAdA,eAAA,CAAgBQ,MAAM,MAAK,GAAG,EAAE;IAClCF,YAAY,GAAG,gCAAgC;IAC/CD,OAAO,CAACI,GAAG,CAAC,kCAAkC,CAAC;EACjD,CAAC,MAAM,IAAI,EAAAR,gBAAA,GAAAF,KAAK,CAACQ,QAAQ,cAAAN,gBAAA,uBAAdA,gBAAA,CAAgBO,MAAM,MAAK,GAAG,EAAE;IACzCF,YAAY,GAAG,uBAAuB;IACtCD,OAAO,CAACI,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC,MAAM,IAAI,EAAAP,gBAAA,GAAAH,KAAK,CAACQ,QAAQ,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBM,MAAM,MAAK,GAAG,EAAE;IACzCF,YAAY,GAAG,2BAA2B;IAC1CD,OAAO,CAACI,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC,MAAM,IAAI,EAAAN,gBAAA,GAAAJ,KAAK,CAACQ,QAAQ,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBK,MAAM,KAAI,GAAG,EAAE;IACxCF,YAAY,GAAG,qCAAqC;IACpDD,OAAO,CAACI,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC,MAAM,IAAI,CAACV,KAAK,CAACQ,QAAQ,EAAE;IAC1BD,YAAY,GAAG,wBAAwB;IACvCD,OAAO,CAACI,GAAG,CAAC,0BAA0B,CAAC;EACzC;EAEA,OAAO;IACLC,OAAO,EAAEJ,YAAY;IACrBE,MAAM,GAAAJ,gBAAA,GAAEL,KAAK,CAACQ,QAAQ,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBI,MAAM;IAC9BG,aAAa,EAAEZ;EACjB,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMa,2BAA2B,GAAGA,CAAA,KAAM;EAC/C,MAAM;IAAEC;EAAe,CAAC,GAAGC,OAAO,CAAC,mBAAmB,CAAC;EACvD,MAAMC,OAAO,GAAGF,cAAc,CAACG,cAAc,CAAC,CAAC;EAE/C,IAAI,CAACD,OAAO,EAAE;IACZV,OAAO,CAACI,GAAG,CAAC,6BAA6B,CAAC;IAC1C,OAAO,KAAK;EACd;EAEA,IAAI,CAACM,OAAO,CAACE,YAAY,EAAE;IACzBZ,OAAO,CAACI,GAAG,CAAC,iCAAiC,CAAC;IAC9C,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;EACtCb,OAAO,CAACI,GAAG,CAAC,4CAA4C,CAAC;;EAEzD;EACA;EACA;EACA;;EAEA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}