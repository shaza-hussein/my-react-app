{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaza\\\\Desktop\\\\test for NO\\\\src\\\\Context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { sessionManager, tokenManager } from '../Config/cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // التحقق من وجود توكن عند تحميل التطبيق\n  useEffect(() => {\n    const session = sessionManager.restoreSession();\n    if (session) {\n      console.log('✅ تم استعادة الجلسة:', session);\n      setUser(session.userData);\n      setIsAuthenticated(true);\n    } else {\n      console.log('❌ لا توجد جلسة محفوظة');\n    }\n  }, []);\n\n  // الاستماع لحدث انتهاء الجلسة\n  useEffect(() => {\n    const handleSessionExpired = () => {\n      console.log('🔄 استقبال حدث انتهاء الجلسة');\n\n      // حذف الجلسة من الكوكيز\n      sessionManager.clearSession();\n\n      // إعادة تعيين الحالة\n      setUser(null);\n      setIsAuthenticated(false);\n\n      // التوجيه إلى صفحة تسجيل الدخول\n      window.location.href = '/login';\n    };\n    window.addEventListener('sessionExpired', handleSessionExpired);\n    return () => {\n      window.removeEventListener('sessionExpired', handleSessionExpired);\n    };\n  }, []);\n\n  // تسجيل الدخول\n  const login = response => {\n    console.log('🔄 بدء تسجيل الدخول:', response);\n\n    // حفظ الجلسة في الكوكيز\n    sessionManager.saveSession(response);\n\n    // استخراج بيانات المستخدم للـ Context\n    const userInfo = {\n      id: response.user.id,\n      is_superuser: response.user.is_superuser,\n      is_active: response.user.is_active,\n      role: response.user.role,\n      phone_number: response.user.phone_number,\n      email: response.user.email\n    };\n    console.log('✅ تم حفظ الجلسة بنجاح:', {\n      userInfo,\n      hasSession: sessionManager.hasSession()\n    });\n\n    // تحديث حالة التطبيق\n    setUser(userInfo);\n    setIsAuthenticated(true);\n  };\n\n  // تسجيل الخروج\n  const logout = () => {\n    console.log('🔄 بدء تسجيل الخروج');\n\n    // حذف الجلسة من الكوكيز\n    sessionManager.clearSession();\n    console.log('✅ تم حذف الجلسة بنجاح');\n\n    // إعادة تعيين الحالة\n    setUser(null);\n    setIsAuthenticated(false);\n\n    // التوجيه إلى صفحة تسجيل الدخول\n    window.location.href = '/login';\n  };\n\n  // تنظيف الجلسة (لحل المشاكل)\n  const clearSession = () => {\n    console.log('🧹 تنظيف الجلسة');\n    sessionManager.clearSession();\n    setUser(null);\n    setIsAuthenticated(false);\n\n    // التوجيه إلى صفحة تسجيل الدخول\n    window.location.href = '/login';\n  };\n\n  // الحصول على التوكن الحالي\n  const getAccessToken = () => {\n    var _sessionManager$resto;\n    const token = (_sessionManager$resto = sessionManager.restoreSession()) === null || _sessionManager$resto === void 0 ? void 0 : _sessionManager$resto.accessToken;\n    console.log('🔑 Access Token:', token ? 'موجود' : 'غير موجود');\n    return token;\n  };\n\n  // الحصول على refresh token\n  const getRefreshToken = () => {\n    var _sessionManager$resto2;\n    const token = (_sessionManager$resto2 = sessionManager.restoreSession()) === null || _sessionManager$resto2 === void 0 ? void 0 : _sessionManager$resto2.refreshToken;\n    console.log('🔄 Refresh Token:', token ? 'موجود' : 'غير موجود');\n    return token;\n  };\n\n  // تحديث التوكن\n  const updateTokens = (access, refresh) => {\n    console.log('🔄 تحديث التوكنز');\n    tokenManager.updateTokens(access, refresh);\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    login,\n    logout,\n    clearSession,\n    getAccessToken,\n    getRefreshToken,\n    updateTokens\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Es9VRuubQSTt9E+Juy2JGCCc0ro=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","sessionManager","tokenManager","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","session","restoreSession","console","log","userData","handleSessionExpired","clearSession","window","location","href","addEventListener","removeEventListener","login","response","saveSession","userInfo","id","is_superuser","is_active","role","phone_number","email","hasSession","logout","getAccessToken","_sessionManager$resto","token","accessToken","getRefreshToken","_sessionManager$resto2","refreshToken","updateTokens","access","refresh","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport { sessionManager, tokenManager } from '../Config/cookies';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // التحقق من وجود توكن عند تحميل التطبيق\r\n  useEffect(() => {\r\n    const session = sessionManager.restoreSession();\r\n    \r\n    if (session) {\r\n      console.log('✅ تم استعادة الجلسة:', session);\r\n      setUser(session.userData);\r\n      setIsAuthenticated(true);\r\n    } else {\r\n      console.log('❌ لا توجد جلسة محفوظة');\r\n    }\r\n  }, []);\r\n\r\n  // الاستماع لحدث انتهاء الجلسة\r\n  useEffect(() => {\r\n    const handleSessionExpired = () => {\r\n      console.log('🔄 استقبال حدث انتهاء الجلسة');\r\n      \r\n      // حذف الجلسة من الكوكيز\r\n      sessionManager.clearSession();\r\n      \r\n      // إعادة تعيين الحالة\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      \r\n      // التوجيه إلى صفحة تسجيل الدخول\r\n      window.location.href = '/login';\r\n    };\r\n\r\n    window.addEventListener('sessionExpired', handleSessionExpired);\r\n\r\n    return () => {\r\n      window.removeEventListener('sessionExpired', handleSessionExpired);\r\n    };\r\n  }, []);\r\n\r\n  // تسجيل الدخول\r\n  const login = (response) => {\r\n    console.log('🔄 بدء تسجيل الدخول:', response);\r\n    \r\n    // حفظ الجلسة في الكوكيز\r\n    sessionManager.saveSession(response);\r\n    \r\n    // استخراج بيانات المستخدم للـ Context\r\n    const userInfo = {\r\n      id: response.user.id,\r\n      is_superuser: response.user.is_superuser,\r\n      is_active: response.user.is_active,\r\n      role: response.user.role,\r\n      phone_number: response.user.phone_number,\r\n      email: response.user.email\r\n    };\r\n\r\n    console.log('✅ تم حفظ الجلسة بنجاح:', {\r\n      userInfo,\r\n      hasSession: sessionManager.hasSession()\r\n    });\r\n\r\n    // تحديث حالة التطبيق\r\n    setUser(userInfo);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  // تسجيل الخروج\r\n  const logout = () => {\r\n    console.log('🔄 بدء تسجيل الخروج');\r\n    \r\n    // حذف الجلسة من الكوكيز\r\n    sessionManager.clearSession();\r\n    \r\n    console.log('✅ تم حذف الجلسة بنجاح');\r\n    \r\n    // إعادة تعيين الحالة\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    // التوجيه إلى صفحة تسجيل الدخول\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // تنظيف الجلسة (لحل المشاكل)\r\n  const clearSession = () => {\r\n    console.log('🧹 تنظيف الجلسة');\r\n    sessionManager.clearSession();\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    \r\n    // التوجيه إلى صفحة تسجيل الدخول\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  // الحصول على التوكن الحالي\r\n  const getAccessToken = () => {\r\n    const token = sessionManager.restoreSession()?.accessToken;\r\n    console.log('🔑 Access Token:', token ? 'موجود' : 'غير موجود');\r\n    return token;\r\n  };\r\n\r\n  // الحصول على refresh token\r\n  const getRefreshToken = () => {\r\n    const token = sessionManager.restoreSession()?.refreshToken;\r\n    console.log('🔄 Refresh Token:', token ? 'موجود' : 'غير موجود');\r\n    return token;\r\n  };\r\n\r\n  // تحديث التوكن\r\n  const updateTokens = (access, refresh) => {\r\n    console.log('🔄 تحديث التوكنز');\r\n    tokenManager.updateTokens(access, refresh);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    login,\r\n    logout,\r\n    clearSession,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    updateTokens\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}