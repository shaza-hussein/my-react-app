{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../API/Auth';\nimport { validateLoginForm } from '../Utils/validateForm';\nexport default function useLoginForm() {\n  _s();\n  const [values, setValues] = useState({\n    phone_number: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // تحقق فوري من صحة رقم الهاتف\n    if (name === 'phone_number') {\n      if (!/^09\\d{0,8}$/.test(value) && value !== \"\") {\n        setErrors(prev => ({\n          ...prev,\n          phone_number: 'رقم الموبايل يجب أن يبدأ بـ 09 وطوله 10 أرقام فقط'\n        }));\n      } else {\n        setErrors(prev => {\n          const {\n            phone_number,\n            ...rest\n          } = prev;\n          return rest;\n        });\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    const validationErrors = validateLoginForm(values);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        await loginUser({\n          phone_number: values.phone_number,\n          password: values.password\n        });\n        clg;\n        // navigate(\"/home\"); // فعل هذا عند الحاجة\n      } catch (error) {\n        let msg = \"فشل تسجيل الدخول. تحقق من البيانات أو الشبكة.\";\n        if (error.response && error.response.data) {\n          if (typeof error.response.data === \"string\") {\n            msg = error.response.data;\n          } else if (typeof error.response.data === \"object\") {\n            msg = Object.values(error.response.data).flat().join(\"، \");\n          }\n        }\n        setError(msg);\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  return {\n    values,\n    errors,\n    error,\n    handleChange,\n    handleSubmit\n  };\n}\n_s(useLoginForm, \"3Ugk9ghsCpvvZatB65n3+88/g9g=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","loginUser","validateLoginForm","useLoginForm","_s","values","setValues","phone_number","password","errors","setErrors","error","setError","navigate","handleChange","e","name","value","target","prev","test","rest","handleSubmit","preventDefault","validationErrors","Object","keys","length","clg","msg","response","data","flat","join"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Hooks/useLoginForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginUser } from '../API/Auth';\r\nimport { validateLoginForm } from '../Utils/validateForm';\r\n\r\nexport default function useLoginForm() {\r\n  const [values, setValues] = useState({\r\n    phone_number: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues((prev) => ({ ...prev, [name]: value }));\r\n    // تحقق فوري من صحة رقم الهاتف\r\n    if (name === 'phone_number') {\r\n      if (!/^09\\d{0,8}$/.test(value) && value !== \"\") {\r\n        setErrors((prev) => ({ ...prev, phone_number: 'رقم الموبايل يجب أن يبدأ بـ 09 وطوله 10 أرقام فقط' }));\r\n      } else {\r\n        setErrors((prev) => {\r\n          const { phone_number, ...rest } = prev;\r\n          return rest;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    const validationErrors = validateLoginForm(values);\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      try {\r\n        await loginUser({\r\n          phone_number: values.phone_number,\r\n          password: values.password\r\n        });\r\n        clg\r\n        // navigate(\"/home\"); // فعل هذا عند الحاجة\r\n      } catch (error) {\r\n        let msg = \"فشل تسجيل الدخول. تحقق من البيانات أو الشبكة.\";\r\n        if (error.response && error.response.data) {\r\n          if (typeof error.response.data === \"string\") {\r\n            msg = error.response.data;\r\n          } else if (typeof error.response.data === \"object\") {\r\n            msg = Object.values(error.response.data).flat().join(\"، \");\r\n          }\r\n        }\r\n        setError(msg);\r\n      }\r\n    } else {\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    error,\r\n    handleChange,\r\n    handleSubmit\r\n  };\r\n} "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,iBAAiB,QAAQ,uBAAuB;AAEzD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC;IACnCQ,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCZ,SAAS,CAAEa,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IACjD;IACA,IAAID,IAAI,KAAK,cAAc,EAAE;MAC3B,IAAI,CAAC,aAAa,CAACI,IAAI,CAACH,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,EAAE;QAC9CP,SAAS,CAAES,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEZ,YAAY,EAAE;QAAoD,CAAC,CAAC,CAAC;MACvG,CAAC,MAAM;QACLG,SAAS,CAAES,IAAI,IAAK;UAClB,MAAM;YAAEZ,YAAY;YAAE,GAAGc;UAAK,CAAC,GAAGF,IAAI;UACtC,OAAOE,IAAI;QACb,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOP,CAAC,IAAK;IAChCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClBX,QAAQ,CAAC,EAAE,CAAC;IACZ,MAAMY,gBAAgB,GAAGtB,iBAAiB,CAACG,MAAM,CAAC;IAClD,IAAIoB,MAAM,CAACC,IAAI,CAACF,gBAAgB,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;MAC9C,IAAI;QACF,MAAM1B,SAAS,CAAC;UACdM,YAAY,EAAEF,MAAM,CAACE,YAAY;UACjCC,QAAQ,EAAEH,MAAM,CAACG;QACnB,CAAC,CAAC;QACFoB,GAAG;QACH;MACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACd,IAAIkB,GAAG,GAAG,+CAA+C;QACzD,IAAIlB,KAAK,CAACmB,QAAQ,IAAInB,KAAK,CAACmB,QAAQ,CAACC,IAAI,EAAE;UACzC,IAAI,OAAOpB,KAAK,CAACmB,QAAQ,CAACC,IAAI,KAAK,QAAQ,EAAE;YAC3CF,GAAG,GAAGlB,KAAK,CAACmB,QAAQ,CAACC,IAAI;UAC3B,CAAC,MAAM,IAAI,OAAOpB,KAAK,CAACmB,QAAQ,CAACC,IAAI,KAAK,QAAQ,EAAE;YAClDF,GAAG,GAAGJ,MAAM,CAACpB,MAAM,CAACM,KAAK,CAACmB,QAAQ,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;UAC5D;QACF;QACArB,QAAQ,CAACiB,GAAG,CAAC;MACf;IACF,CAAC,MAAM;MACLnB,SAAS,CAACc,gBAAgB,CAAC;IAC7B;EACF,CAAC;EAED,OAAO;IACLnB,MAAM;IACNI,MAAM;IACNE,KAAK;IACLG,YAAY;IACZQ;EACF,CAAC;AACH;AAAClB,EAAA,CA5DuBD,YAAY;EAAA,QAOjBH,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}