{"ast":null,"code":"var _s = $RefreshSig$();\n// src/Hooks/useRegisterForm.js\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateRegisterForm, getInstantPhoneError } from '../Utils/validateForm';\nimport { sendOTP } from '../API/Auth';\nexport default function useRegisterForm() {\n  _s();\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    first_name: '',\n    father_name: '',\n    last_name: '',\n    phone_number: '',\n    password: '',\n    password_confirmation: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [apiError, setApiError] = useState(\"\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // تحقق فوري من صحة رقم الهاتف\n    if (name === 'phone_number') {\n      const phoneError = getInstantPhoneError(value);\n      if (phoneError) {\n        setErrors(prev => ({\n          ...prev,\n          phone_number: phoneError\n        }));\n      } else {\n        setErrors(prev => {\n          const {\n            phone_number,\n            ...rest\n          } = prev;\n          return rest;\n        });\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateRegisterForm(values);\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        await sendOTP({\n          phone_number: values.phone_number\n        });\n        setApiError(\"\");\n        navigate(\"/verify-otp\", {\n          state: {\n            formData: values\n          }\n        });\n      } catch (error) {\n        let msg = \"فشل إرسال رمز OTP. تحقق من الرقم أو الشبكة.\";\n        if (error.response && error.response.data) {\n          if (typeof error.response.data === \"string\") {\n            msg = error.response.data;\n          } else if (typeof error.response.data === \"object\") {\n            msg = Object.values(error.response.data).flat().join(\"، \");\n          }\n        }\n        setApiError(msg);\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  return {\n    values,\n    errors,\n    apiError,\n    handleChange,\n    handleSubmit\n  };\n}\n_s(useRegisterForm, \"sk4kw4pjlcuFEYhN4beRWipxYPQ=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useNavigate","validateRegisterForm","getInstantPhoneError","sendOTP","useRegisterForm","_s","navigate","values","setValues","first_name","father_name","last_name","phone_number","password","password_confirmation","errors","setErrors","apiError","setApiError","handleChange","e","name","value","target","prev","phoneError","rest","handleSubmit","preventDefault","validationErrors","Object","keys","length","state","formData","error","msg","response","data","flat","join"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Hooks/useRegisterForm.js"],"sourcesContent":["// src/Hooks/useRegisterForm.js\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { validateRegisterForm, getInstantPhoneError } from '../Utils/validateForm';\r\nimport { sendOTP } from '../API/Auth';\r\n\r\nexport default function useRegisterForm() {\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n    first_name: '',\r\n    father_name: '',\r\n    last_name: '',\r\n    phone_number: '',\r\n    password: '',\r\n    password_confirmation: '',\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [apiError, setApiError] = useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n        }));\r\n    // تحقق فوري من صحة رقم الهاتف\r\n    if (name === 'phone_number') {\r\n        const phoneError = getInstantPhoneError(value);\r\n        if (phoneError) {\r\n            setErrors((prev) => ({ ...prev, phone_number: phoneError }));\r\n        } else {\r\n            setErrors((prev) => {\r\n                const { phone_number, ...rest } = prev;\r\n                return rest;\r\n            });\r\n        }\r\n    }\r\n    };\r\n    \r\n    const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateRegisterForm(values);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n        try {\r\n            await sendOTP({ phone_number: values.phone_number });\r\n            setApiError(\"\");\r\n            navigate(\"/verify-otp\", { state: { formData: values } });\r\n        } catch (error) {\r\n            let msg = \"فشل إرسال رمز OTP. تحقق من الرقم أو الشبكة.\";\r\n            if (error.response && error.response.data) {\r\n                if (typeof error.response.data === \"string\") {\r\n                    msg = error.response.data;\r\n                } else if (typeof error.response.data === \"object\") {\r\n                    msg = Object.values(error.response.data).flat().join(\"، \");\r\n                }\r\n            }\r\n            setApiError(msg);\r\n        }\r\n    } else {\r\n        setErrors(validationErrors);\r\n    }\r\n    };\r\n\r\n    return {\r\n    values,\r\n    errors,\r\n    apiError,\r\n    handleChange,\r\n    handleSubmit,\r\n    };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}