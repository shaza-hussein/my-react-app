{"ast":null,"code":"var dist = {};\nvar hasRequiredDist;\nfunction requireDist() {\n  if (hasRequiredDist) return dist;\n  hasRequiredDist = 1;\n  Object.defineProperty(dist, \"__esModule\", {\n    value: true\n  });\n  dist.parse = parse;\n  dist.serialize = serialize;\n  /**\n   * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n   * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n   * which has been replaced by the token definition in RFC 7230 appendix B.\n   *\n   * cookie-name       = token\n   * token             = 1*tchar\n   * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n   *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n   *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n   *\n   * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n   * Allow same range as cookie value, except `=`, which delimits end of name.\n   */\n  const cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n  /**\n   * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n   *\n   * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n   * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n   *                     ; US-ASCII characters excluding CTLs,\n   *                     ; whitespace DQUOTE, comma, semicolon,\n   *                     ; and backslash\n   *\n   * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n   * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n   */\n  const cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n  /**\n   * RegExp to match domain-value in RFC 6265 sec 4.1.1\n   *\n   * domain-value      = <subdomain>\n   *                     ; defined in [RFC1034], Section 3.5, as\n   *                     ; enhanced by [RFC1123], Section 2.1\n   * <subdomain>       = <label> | <subdomain> \".\" <label>\n   * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n   *                     Labels must be 63 characters or less.\n   *                     'let-dig' not 'letter' in the first char, per RFC1123\n   * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n   * <let-dig-hyp>     = <let-dig> | \"-\"\n   * <let-dig>         = <letter> | <digit>\n   * <letter>          = any one of the 52 alphabetic characters A through Z in\n   *                     upper case and a through z in lower case\n   * <digit>           = any one of the ten digits 0 through 9\n   *\n   * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n   *\n   * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n   * character is not permitted, but a trailing %x2E (\".\"), if present, will\n   * cause the user agent to ignore the attribute.)\n   */\n  const domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n  /**\n   * RegExp to match path-value in RFC 6265 sec 4.1.1\n   *\n   * path-value        = <any CHAR except CTLs or \";\">\n   * CHAR              = %x01-7F\n   *                     ; defined in RFC 5234 appendix B.1\n   */\n  const pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n  const __toString = Object.prototype.toString;\n  const NullObject = /* @__PURE__ */(() => {\n    const C = function () {};\n    C.prototype = Object.create(null);\n    return C;\n  })();\n  /**\n   * Parse a cookie header.\n   *\n   * Parse the given cookie header string into an object\n   * The object has the various cookies as keys(names) => values\n   */\n  function parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2) return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n      const eqIdx = str.indexOf(\"=\", index);\n      if (eqIdx === -1) break; // No more cookie pairs.\n      const colonIdx = str.indexOf(\";\", index);\n      const endIdx = colonIdx === -1 ? len : colonIdx;\n      if (eqIdx > endIdx) {\n        // backtrack on prior semicolon\n        index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n        continue;\n      }\n      const keyStartIdx = startIndex(str, index, eqIdx);\n      const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n      const key = str.slice(keyStartIdx, keyEndIdx);\n      // only assign once\n      if (obj[key] === undefined) {\n        let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n        let valEndIdx = endIndex(str, endIdx, valStartIdx);\n        const value = dec(str.slice(valStartIdx, valEndIdx));\n        obj[key] = value;\n      }\n      index = endIdx + 1;\n    } while (index < len);\n    return obj;\n  }\n  function startIndex(str, index, max) {\n    do {\n      const code = str.charCodeAt(index);\n      if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index;\n    } while (++index < max);\n    return max;\n  }\n  function endIndex(str, index, min) {\n    while (index > min) {\n      const code = str.charCodeAt(--index);\n      if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */) return index + 1;\n    }\n    return min;\n  }\n  /**\n   * Serialize data into a cookie header.\n   *\n   * Serialize a name value pair into a cookie string suitable for\n   * http headers. An optional options object specifies cookie parameters.\n   *\n   * serialize('foo', 'bar', { httpOnly: true })\n   *   => \"foo=bar; httpOnly\"\n   */\n  function serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n      throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n      throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options) return str;\n    if (options.maxAge !== undefined) {\n      if (!Number.isInteger(options.maxAge)) {\n        throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n      }\n      str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n      if (!domainValueRegExp.test(options.domain)) {\n        throw new TypeError(`option domain is invalid: ${options.domain}`);\n      }\n      str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n      if (!pathValueRegExp.test(options.path)) {\n        throw new TypeError(`option path is invalid: ${options.path}`);\n      }\n      str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n      if (!isDate(options.expires) || !Number.isFinite(options.expires.valueOf())) {\n        throw new TypeError(`option expires is invalid: ${options.expires}`);\n      }\n      str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n      str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n      str += \"; Secure\";\n    }\n    if (options.partitioned) {\n      str += \"; Partitioned\";\n    }\n    if (options.priority) {\n      const priority = typeof options.priority === \"string\" ? options.priority.toLowerCase() : undefined;\n      switch (priority) {\n        case \"low\":\n          str += \"; Priority=Low\";\n          break;\n        case \"medium\":\n          str += \"; Priority=Medium\";\n          break;\n        case \"high\":\n          str += \"; Priority=High\";\n          break;\n        default:\n          throw new TypeError(`option priority is invalid: ${options.priority}`);\n      }\n    }\n    if (options.sameSite) {\n      const sameSite = typeof options.sameSite === \"string\" ? options.sameSite.toLowerCase() : options.sameSite;\n      switch (sameSite) {\n        case true:\n        case \"strict\":\n          str += \"; SameSite=Strict\";\n          break;\n        case \"lax\":\n          str += \"; SameSite=Lax\";\n          break;\n        case \"none\":\n          str += \"; SameSite=None\";\n          break;\n        default:\n          throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n      }\n    }\n    return str;\n  }\n  /**\n   * URL-decode string value. Optimized to skip native call when no %.\n   */\n  function decode(str) {\n    if (str.indexOf(\"%\") === -1) return str;\n    try {\n      return decodeURIComponent(str);\n    } catch (e) {\n      return str;\n    }\n  }\n  /**\n   * Determine if value is a Date.\n   */\n  function isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n  }\n  return dist;\n}\nvar distExports = requireDist();\nfunction hasDocumentCookie() {\n  const testingValue = typeof global === 'undefined' ? undefined : global.TEST_HAS_DOCUMENT_COOKIE;\n  if (typeof testingValue === 'boolean') {\n    return testingValue;\n  }\n  // Can we get/set cookies on document.cookie?\n  return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n  if (typeof cookies === 'string') {\n    return distExports.parse(cookies);\n  } else if (typeof cookies === 'object' && cookies !== null) {\n    return cookies;\n  } else {\n    return {};\n  }\n}\nfunction readCookie(value, options = {}) {\n  const cleanValue = cleanupCookieValue(value);\n  if (!options.doNotParse) {\n    try {\n      return JSON.parse(cleanValue);\n    } catch (e) {\n      // At least we tried\n    }\n  }\n  // Ignore clean value if we failed the deserialization\n  // It is not relevant anymore to trim those values\n  return value;\n}\nfunction cleanupCookieValue(value) {\n  // express prepend j: before serializing a cookie\n  if (value && value[0] === 'j' && value[1] === ':') {\n    return value.substr(2);\n  }\n  return value;\n}\nclass Cookies {\n  constructor(cookies, defaultSetOptions = {}) {\n    this.changeListeners = [];\n    this.HAS_DOCUMENT_COOKIE = false;\n    this.update = () => {\n      if (!this.HAS_DOCUMENT_COOKIE) {\n        return;\n      }\n      const previousCookies = this.cookies;\n      this.cookies = distExports.parse(document.cookie);\n      this._checkChanges(previousCookies);\n    };\n    const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n    this.cookies = parseCookies(cookies || domCookies);\n    this.defaultSetOptions = defaultSetOptions;\n    this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n  }\n  _emitChange(params) {\n    for (let i = 0; i < this.changeListeners.length; ++i) {\n      this.changeListeners[i](params);\n    }\n  }\n  _checkChanges(previousCookies) {\n    const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n    names.forEach(name => {\n      if (previousCookies[name] !== this.cookies[name]) {\n        this._emitChange({\n          name,\n          value: readCookie(this.cookies[name])\n        });\n      }\n    });\n  }\n  _startPolling() {\n    this.pollingInterval = setInterval(this.update, 300);\n  }\n  _stopPolling() {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n    }\n  }\n  get(name, options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    return readCookie(this.cookies[name], options);\n  }\n  getAll(options = {}) {\n    if (!options.doNotUpdate) {\n      this.update();\n    }\n    const result = {};\n    for (let name in this.cookies) {\n      result[name] = readCookie(this.cookies[name], options);\n    }\n    return result;\n  }\n  set(name, value, options) {\n    if (options) {\n      options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n    } else {\n      options = this.defaultSetOptions;\n    }\n    const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n    this.cookies = Object.assign(Object.assign({}, this.cookies), {\n      [name]: stringValue\n    });\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = distExports.serialize(name, stringValue, options);\n    }\n    this._emitChange({\n      name,\n      value,\n      options\n    });\n  }\n  remove(name, options) {\n    const finalOptions = options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), {\n      expires: new Date(1970, 1, 1, 0, 0, 1),\n      maxAge: 0\n    });\n    this.cookies = Object.assign({}, this.cookies);\n    delete this.cookies[name];\n    if (this.HAS_DOCUMENT_COOKIE) {\n      document.cookie = distExports.serialize(name, '', finalOptions);\n    }\n    this._emitChange({\n      name,\n      value: undefined,\n      options\n    });\n  }\n  addChangeListener(callback) {\n    this.changeListeners.push(callback);\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.addEventListener('change', this.update);\n      } else {\n        this._startPolling();\n      }\n    }\n  }\n  removeChangeListener(callback) {\n    const idx = this.changeListeners.indexOf(callback);\n    if (idx >= 0) {\n      this.changeListeners.splice(idx, 1);\n    }\n    if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n      if (typeof window === 'object' && 'cookieStore' in window) {\n        window.cookieStore.removeEventListener('change', this.update);\n      } else {\n        this._stopPolling();\n      }\n    }\n  }\n  removeAllChangeListeners() {\n    while (this.changeListeners.length > 0) {\n      this.removeChangeListener(this.changeListeners[0]);\n    }\n  }\n}\nexport { Cookies as default };","map":{"version":3,"names":["dist","hasRequiredDist","requireDist","Object","defineProperty","value","parse","serialize","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","prototype","toString","NullObject","C","create","str","options","obj","len","length","dec","decode","index","eqIdx","indexOf","colonIdx","endIdx","lastIndexOf","keyStartIdx","startIndex","keyEndIdx","endIndex","key","slice","undefined","valStartIdx","valEndIdx","max","code","charCodeAt","min","name","val","enc","encode","encodeURIComponent","test","TypeError","maxAge","Number","isInteger","domain","path","expires","isDate","isFinite","valueOf","toUTCString","httpOnly","secure","partitioned","priority","toLowerCase","sameSite","decodeURIComponent","e","call","distExports","hasDocumentCookie","testingValue","global","TEST_HAS_DOCUMENT_COOKIE","document","cookie","parseCookies","cookies","readCookie","cleanValue","cleanupCookieValue","doNotParse","JSON","substr","Cookies","constructor","defaultSetOptions","changeListeners","HAS_DOCUMENT_COOKIE","update","previousCookies","_checkChanges","domCookies","_emitChange","params","i","names","Set","keys","concat","forEach","_startPolling","pollingInterval","setInterval","_stopPolling","clearInterval","get","doNotUpdate","getAll","result","set","assign","stringValue","stringify","remove","finalOptions","Date","addChangeListener","callback","push","window","cookieStore","addEventListener","removeChangeListener","idx","splice","removeEventListener","removeAllChangeListeners","default"],"sources":["C:/Users/shaza/Desktop/test for NO/node_modules/universal-cookie/esm/index.mjs"],"sourcesContent":["var dist = {};\n\nvar hasRequiredDist;\n\nfunction requireDist () {\n\tif (hasRequiredDist) return dist;\n\thasRequiredDist = 1;\n\tObject.defineProperty(dist, \"__esModule\", { value: true });\n\tdist.parse = parse;\n\tdist.serialize = serialize;\n\t/**\n\t * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n\t * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n\t * which has been replaced by the token definition in RFC 7230 appendix B.\n\t *\n\t * cookie-name       = token\n\t * token             = 1*tchar\n\t * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n\t *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n\t *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n\t *\n\t * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n\t * Allow same range as cookie value, except `=`, which delimits end of name.\n\t */\n\tconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n\t/**\n\t * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n\t *\n\t * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n\t * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n\t *                     ; US-ASCII characters excluding CTLs,\n\t *                     ; whitespace DQUOTE, comma, semicolon,\n\t *                     ; and backslash\n\t *\n\t * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n\t * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n\t */\n\tconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n\t/**\n\t * RegExp to match domain-value in RFC 6265 sec 4.1.1\n\t *\n\t * domain-value      = <subdomain>\n\t *                     ; defined in [RFC1034], Section 3.5, as\n\t *                     ; enhanced by [RFC1123], Section 2.1\n\t * <subdomain>       = <label> | <subdomain> \".\" <label>\n\t * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n\t *                     Labels must be 63 characters or less.\n\t *                     'let-dig' not 'letter' in the first char, per RFC1123\n\t * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n\t * <let-dig-hyp>     = <let-dig> | \"-\"\n\t * <let-dig>         = <letter> | <digit>\n\t * <letter>          = any one of the 52 alphabetic characters A through Z in\n\t *                     upper case and a through z in lower case\n\t * <digit>           = any one of the ten digits 0 through 9\n\t *\n\t * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n\t *\n\t * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n\t * character is not permitted, but a trailing %x2E (\".\"), if present, will\n\t * cause the user agent to ignore the attribute.)\n\t */\n\tconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n\t/**\n\t * RegExp to match path-value in RFC 6265 sec 4.1.1\n\t *\n\t * path-value        = <any CHAR except CTLs or \";\">\n\t * CHAR              = %x01-7F\n\t *                     ; defined in RFC 5234 appendix B.1\n\t */\n\tconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n\tconst __toString = Object.prototype.toString;\n\tconst NullObject = /* @__PURE__ */ (() => {\n\t    const C = function () { };\n\t    C.prototype = Object.create(null);\n\t    return C;\n\t})();\n\t/**\n\t * Parse a cookie header.\n\t *\n\t * Parse the given cookie header string into an object\n\t * The object has the various cookies as keys(names) => values\n\t */\n\tfunction parse(str, options) {\n\t    const obj = new NullObject();\n\t    const len = str.length;\n\t    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n\t    if (len < 2)\n\t        return obj;\n\t    const dec = options?.decode || decode;\n\t    let index = 0;\n\t    do {\n\t        const eqIdx = str.indexOf(\"=\", index);\n\t        if (eqIdx === -1)\n\t            break; // No more cookie pairs.\n\t        const colonIdx = str.indexOf(\";\", index);\n\t        const endIdx = colonIdx === -1 ? len : colonIdx;\n\t        if (eqIdx > endIdx) {\n\t            // backtrack on prior semicolon\n\t            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n\t            continue;\n\t        }\n\t        const keyStartIdx = startIndex(str, index, eqIdx);\n\t        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n\t        const key = str.slice(keyStartIdx, keyEndIdx);\n\t        // only assign once\n\t        if (obj[key] === undefined) {\n\t            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n\t            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n\t            const value = dec(str.slice(valStartIdx, valEndIdx));\n\t            obj[key] = value;\n\t        }\n\t        index = endIdx + 1;\n\t    } while (index < len);\n\t    return obj;\n\t}\n\tfunction startIndex(str, index, max) {\n\t    do {\n\t        const code = str.charCodeAt(index);\n\t        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n\t            return index;\n\t    } while (++index < max);\n\t    return max;\n\t}\n\tfunction endIndex(str, index, min) {\n\t    while (index > min) {\n\t        const code = str.charCodeAt(--index);\n\t        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n\t            return index + 1;\n\t    }\n\t    return min;\n\t}\n\t/**\n\t * Serialize data into a cookie header.\n\t *\n\t * Serialize a name value pair into a cookie string suitable for\n\t * http headers. An optional options object specifies cookie parameters.\n\t *\n\t * serialize('foo', 'bar', { httpOnly: true })\n\t *   => \"foo=bar; httpOnly\"\n\t */\n\tfunction serialize(name, val, options) {\n\t    const enc = options?.encode || encodeURIComponent;\n\t    if (!cookieNameRegExp.test(name)) {\n\t        throw new TypeError(`argument name is invalid: ${name}`);\n\t    }\n\t    const value = enc(val);\n\t    if (!cookieValueRegExp.test(value)) {\n\t        throw new TypeError(`argument val is invalid: ${val}`);\n\t    }\n\t    let str = name + \"=\" + value;\n\t    if (!options)\n\t        return str;\n\t    if (options.maxAge !== undefined) {\n\t        if (!Number.isInteger(options.maxAge)) {\n\t            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n\t        }\n\t        str += \"; Max-Age=\" + options.maxAge;\n\t    }\n\t    if (options.domain) {\n\t        if (!domainValueRegExp.test(options.domain)) {\n\t            throw new TypeError(`option domain is invalid: ${options.domain}`);\n\t        }\n\t        str += \"; Domain=\" + options.domain;\n\t    }\n\t    if (options.path) {\n\t        if (!pathValueRegExp.test(options.path)) {\n\t            throw new TypeError(`option path is invalid: ${options.path}`);\n\t        }\n\t        str += \"; Path=\" + options.path;\n\t    }\n\t    if (options.expires) {\n\t        if (!isDate(options.expires) ||\n\t            !Number.isFinite(options.expires.valueOf())) {\n\t            throw new TypeError(`option expires is invalid: ${options.expires}`);\n\t        }\n\t        str += \"; Expires=\" + options.expires.toUTCString();\n\t    }\n\t    if (options.httpOnly) {\n\t        str += \"; HttpOnly\";\n\t    }\n\t    if (options.secure) {\n\t        str += \"; Secure\";\n\t    }\n\t    if (options.partitioned) {\n\t        str += \"; Partitioned\";\n\t    }\n\t    if (options.priority) {\n\t        const priority = typeof options.priority === \"string\"\n\t            ? options.priority.toLowerCase()\n\t            : undefined;\n\t        switch (priority) {\n\t            case \"low\":\n\t                str += \"; Priority=Low\";\n\t                break;\n\t            case \"medium\":\n\t                str += \"; Priority=Medium\";\n\t                break;\n\t            case \"high\":\n\t                str += \"; Priority=High\";\n\t                break;\n\t            default:\n\t                throw new TypeError(`option priority is invalid: ${options.priority}`);\n\t        }\n\t    }\n\t    if (options.sameSite) {\n\t        const sameSite = typeof options.sameSite === \"string\"\n\t            ? options.sameSite.toLowerCase()\n\t            : options.sameSite;\n\t        switch (sameSite) {\n\t            case true:\n\t            case \"strict\":\n\t                str += \"; SameSite=Strict\";\n\t                break;\n\t            case \"lax\":\n\t                str += \"; SameSite=Lax\";\n\t                break;\n\t            case \"none\":\n\t                str += \"; SameSite=None\";\n\t                break;\n\t            default:\n\t                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n\t        }\n\t    }\n\t    return str;\n\t}\n\t/**\n\t * URL-decode string value. Optimized to skip native call when no %.\n\t */\n\tfunction decode(str) {\n\t    if (str.indexOf(\"%\") === -1)\n\t        return str;\n\t    try {\n\t        return decodeURIComponent(str);\n\t    }\n\t    catch (e) {\n\t        return str;\n\t    }\n\t}\n\t/**\n\t * Determine if value is a Date.\n\t */\n\tfunction isDate(val) {\n\t    return __toString.call(val) === \"[object Date]\";\n\t}\n\t\n\treturn dist;\n}\n\nvar distExports = requireDist();\n\nfunction hasDocumentCookie() {\n    const testingValue = typeof global === 'undefined'\n        ? undefined\n        : global.TEST_HAS_DOCUMENT_COOKIE;\n    if (typeof testingValue === 'boolean') {\n        return testingValue;\n    }\n    // Can we get/set cookies on document.cookie?\n    return typeof document === 'object' && typeof document.cookie === 'string';\n}\nfunction parseCookies(cookies) {\n    if (typeof cookies === 'string') {\n        return distExports.parse(cookies);\n    }\n    else if (typeof cookies === 'object' && cookies !== null) {\n        return cookies;\n    }\n    else {\n        return {};\n    }\n}\nfunction readCookie(value, options = {}) {\n    const cleanValue = cleanupCookieValue(value);\n    if (!options.doNotParse) {\n        try {\n            return JSON.parse(cleanValue);\n        }\n        catch (e) {\n            // At least we tried\n        }\n    }\n    // Ignore clean value if we failed the deserialization\n    // It is not relevant anymore to trim those values\n    return value;\n}\nfunction cleanupCookieValue(value) {\n    // express prepend j: before serializing a cookie\n    if (value && value[0] === 'j' && value[1] === ':') {\n        return value.substr(2);\n    }\n    return value;\n}\n\nclass Cookies {\n    constructor(cookies, defaultSetOptions = {}) {\n        this.changeListeners = [];\n        this.HAS_DOCUMENT_COOKIE = false;\n        this.update = () => {\n            if (!this.HAS_DOCUMENT_COOKIE) {\n                return;\n            }\n            const previousCookies = this.cookies;\n            this.cookies = distExports.parse(document.cookie);\n            this._checkChanges(previousCookies);\n        };\n        const domCookies = typeof document === 'undefined' ? '' : document.cookie;\n        this.cookies = parseCookies(cookies || domCookies);\n        this.defaultSetOptions = defaultSetOptions;\n        this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\n    }\n    _emitChange(params) {\n        for (let i = 0; i < this.changeListeners.length; ++i) {\n            this.changeListeners[i](params);\n        }\n    }\n    _checkChanges(previousCookies) {\n        const names = new Set(Object.keys(previousCookies).concat(Object.keys(this.cookies)));\n        names.forEach((name) => {\n            if (previousCookies[name] !== this.cookies[name]) {\n                this._emitChange({\n                    name,\n                    value: readCookie(this.cookies[name]),\n                });\n            }\n        });\n    }\n    _startPolling() {\n        this.pollingInterval = setInterval(this.update, 300);\n    }\n    _stopPolling() {\n        if (this.pollingInterval) {\n            clearInterval(this.pollingInterval);\n        }\n    }\n    get(name, options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        return readCookie(this.cookies[name], options);\n    }\n    getAll(options = {}) {\n        if (!options.doNotUpdate) {\n            this.update();\n        }\n        const result = {};\n        for (let name in this.cookies) {\n            result[name] = readCookie(this.cookies[name], options);\n        }\n        return result;\n    }\n    set(name, value, options) {\n        if (options) {\n            options = Object.assign(Object.assign({}, this.defaultSetOptions), options);\n        }\n        else {\n            options = this.defaultSetOptions;\n        }\n        const stringValue = typeof value === 'string' ? value : JSON.stringify(value);\n        this.cookies = Object.assign(Object.assign({}, this.cookies), { [name]: stringValue });\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = distExports.serialize(name, stringValue, options);\n        }\n        this._emitChange({ name, value, options });\n    }\n    remove(name, options) {\n        const finalOptions = (options = Object.assign(Object.assign(Object.assign({}, this.defaultSetOptions), options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\n        this.cookies = Object.assign({}, this.cookies);\n        delete this.cookies[name];\n        if (this.HAS_DOCUMENT_COOKIE) {\n            document.cookie = distExports.serialize(name, '', finalOptions);\n        }\n        this._emitChange({ name, value: undefined, options });\n    }\n    addChangeListener(callback) {\n        this.changeListeners.push(callback);\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 1) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.addEventListener('change', this.update);\n            }\n            else {\n                this._startPolling();\n            }\n        }\n    }\n    removeChangeListener(callback) {\n        const idx = this.changeListeners.indexOf(callback);\n        if (idx >= 0) {\n            this.changeListeners.splice(idx, 1);\n        }\n        if (this.HAS_DOCUMENT_COOKIE && this.changeListeners.length === 0) {\n            if (typeof window === 'object' && 'cookieStore' in window) {\n                window.cookieStore.removeEventListener('change', this.update);\n            }\n            else {\n                this._stopPolling();\n            }\n        }\n    }\n    removeAllChangeListeners() {\n        while (this.changeListeners.length > 0) {\n            this.removeChangeListener(this.changeListeners[0]);\n        }\n    }\n}\n\nexport { Cookies as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}