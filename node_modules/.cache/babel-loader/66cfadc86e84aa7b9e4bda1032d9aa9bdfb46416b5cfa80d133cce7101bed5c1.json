{"ast":null,"code":"// src/API/auth.js\nimport axiosInstance from '../Config/axios';\nimport { REGISTER, SEND_OTP, LOGIN } from \"./Api\";\n\n// طلب إرسال OTP\nexport const sendOTP = async ({\n  phone_number,\n  purpose = \"register\"\n}) => {\n  try {\n    const response = await axiosInstance.post(SEND_OTP, {\n      phone_number,\n      purpose\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error sending OTP:', error);\n    throw error;\n  }\n};\n\n// تنفيذ عملية التسجيل\nexport const registerUser = async data => {\n  try {\n    const response = await axiosInstance.post(REGISTER, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};\n\n// تنفيذ عملية تسجيل الدخول\nexport const loginUser = async data => {\n  try {\n    console.log('Attempting login with data:', data);\n    const response = await axiosInstance.post(LOGIN, data);\n    console.log('Login successful:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Login error:', error);\n    console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n    throw error;\n  }\n};","map":{"version":3,"names":["axiosInstance","REGISTER","SEND_OTP","LOGIN","sendOTP","phone_number","purpose","response","post","data","error","console","registerUser","loginUser","log","_error$response","_error$response2","status"],"sources":["C:/Users/shaza/Desktop/test for NO/src/API/Auth.js"],"sourcesContent":["// src/API/auth.js\r\nimport axiosInstance from '../Config/axios';\r\nimport {\r\n  REGISTER,\r\n  SEND_OTP,\r\n  LOGIN\r\n} from \"./Api\";\r\n\r\n// طلب إرسال OTP\r\nexport const sendOTP = async ({ phone_number, purpose = \"register\" }) => {\r\n  try {\r\n    const response = await axiosInstance.post(SEND_OTP, { \r\n      phone_number,\r\n      purpose \r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending OTP:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// تنفيذ عملية التسجيل\r\nexport const registerUser = async (data) => {\r\n  try {\r\n    const response = await axiosInstance.post(REGISTER, data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error registering user:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// تنفيذ عملية تسجيل الدخول\r\nexport const loginUser = async (data) => {\r\n  try {\r\n    console.log('Attempting login with data:', data);\r\n    const response = await axiosInstance.post(LOGIN, data);\r\n    console.log('Login successful:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    console.error('Error response:', error.response?.data);\r\n    console.error('Error status:', error.response?.status);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,SACEC,QAAQ,EACRC,QAAQ,EACRC,KAAK,QACA,OAAO;;AAEd;AACA,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAO;EAAEC,YAAY;EAAEC,OAAO,GAAG;AAAW,CAAC,KAAK;EACvE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACQ,IAAI,CAACN,QAAQ,EAAE;MAClDG,YAAY;MACZC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOH,IAAI,IAAK;EAC1C,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMP,aAAa,CAACQ,IAAI,CAACP,QAAQ,EAAEQ,IAAI,CAAC;IACzD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOJ,IAAI,IAAK;EACvC,IAAI;IACFE,OAAO,CAACG,GAAG,CAAC,6BAA6B,EAAEL,IAAI,CAAC;IAChD,MAAMF,QAAQ,GAAG,MAAMP,aAAa,CAACQ,IAAI,CAACL,KAAK,EAAEM,IAAI,CAAC;IACtDE,OAAO,CAACG,GAAG,CAAC,mBAAmB,EAAEP,QAAQ,CAACE,IAAI,CAAC;IAC/C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,eAAA,EAAAC,gBAAA;IACdL,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpCC,OAAO,CAACD,KAAK,CAAC,iBAAiB,GAAAK,eAAA,GAAEL,KAAK,CAACH,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBN,IAAI,CAAC;IACtDE,OAAO,CAACD,KAAK,CAAC,eAAe,GAAAM,gBAAA,GAAEN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,CAAC;IACtD,MAAMP,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}