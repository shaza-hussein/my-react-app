{"ast":null,"code":"// src/API/auth.js\nimport { publicAxios } from '../Config/axios';\nimport axiosInstance from '../Config/axios';\nimport { REGISTER, SEND_OTP, LOGIN, TOKEN_REFRESH, CONFIRM_OTP, RESET_PASSWORD, LOGOUT } from \"./Api\";\n\n// طلب إرسال OTP - طلب عام\nexport const sendOTP = async ({\n  phone_number,\n  purpose = \"register\"\n}) => {\n  const response = await publicAxios.post(SEND_OTP, {\n    phone_number,\n    purpose\n  });\n  return response.data;\n};\n\n// تنفيذ عملية التسجيل - طلب عام\nexport const registerUser = async data => {\n  const response = await publicAxios.post(REGISTER, data);\n  return response.data;\n};\n\n// تنفيذ عملية تسجيل الدخول - طلب عام\nexport const loginUser = async data => {\n  const response = await publicAxios.post(LOGIN, data);\n  return response.data;\n};\n\n// تحديث التوكن - طلب عام\nexport const refreshToken = async refresh => {\n  const response = await publicAxios.post(TOKEN_REFRESH, {\n    refresh\n  });\n  return response.data;\n};\n\n// تنفيذ تأكيد رمز OTP - طلب عام\nexport const confirmOTP = async data => {\n  const response = await publicAxios.post(CONFIRM_OTP, data);\n  return response.data;\n};\n\n// إعادة تعيين كلمة المرور - طلب عام\nexport const resetPassword = async data => {\n  const response = await publicAxios.post(RESET_PASSWORD, data);\n  return response.data;\n};\n\n// تسجيل الخروج - طلب محمي\nexport const logoutUser = async () => {\n  // الحصول على refresh token من الجلسة\n  const {\n    sessionManager\n  } = await import('../Config/cookies');\n  const session = sessionManager.restoreSession();\n  const refreshToken = session === null || session === void 0 ? void 0 : session.refreshToken;\n  if (!refreshToken) {\n    throw new Error('لا يوجد refresh token');\n  }\n  const response = await axiosInstance.post(LOGOUT, {\n    refresh: refreshToken\n  });\n  return response.data;\n};","map":{"version":3,"names":["publicAxios","axiosInstance","REGISTER","SEND_OTP","LOGIN","TOKEN_REFRESH","CONFIRM_OTP","RESET_PASSWORD","LOGOUT","sendOTP","phone_number","purpose","response","post","data","registerUser","loginUser","refreshToken","refresh","confirmOTP","resetPassword","logoutUser","sessionManager","session","restoreSession","Error"],"sources":["C:/Users/shaza/Desktop/test for NO/src/API/Auth.js"],"sourcesContent":["// src/API/auth.js\r\nimport  { publicAxios } from '../Config/axios';\r\nimport axiosInstance from '../Config/axios';\r\nimport {\r\n  REGISTER,\r\n  SEND_OTP,\r\n  LOGIN,\r\n  TOKEN_REFRESH,\r\n  CONFIRM_OTP,\r\n  RESET_PASSWORD,\r\n  LOGOUT\r\n} from \"./Api\";\r\n\r\n// طلب إرسال OTP - طلب عام\r\nexport const sendOTP = async ({ phone_number, purpose = \"register\" }) => {\r\n  const response = await publicAxios.post(SEND_OTP, { \r\n    phone_number,\r\n    purpose \r\n  });\r\n  return response.data;\r\n};\r\n\r\n// تنفيذ عملية التسجيل - طلب عام\r\nexport const registerUser = async (data) => {\r\n  const response = await publicAxios.post(REGISTER, data);\r\n  return response.data;\r\n};\r\n\r\n// تنفيذ عملية تسجيل الدخول - طلب عام\r\nexport const loginUser = async (data) => {\r\n  const response = await publicAxios.post(LOGIN, data);\r\n  return response.data;\r\n};\r\n\r\n// تحديث التوكن - طلب عام\r\nexport const refreshToken = async (refresh) => {\r\n  const response = await publicAxios.post(TOKEN_REFRESH, { \r\n    refresh \r\n  });\r\n  return response.data;\r\n};\r\n\r\n// تنفيذ تأكيد رمز OTP - طلب عام\r\nexport const confirmOTP = async (data) => {\r\n  const response = await publicAxios.post(CONFIRM_OTP, data);\r\n  return response.data;\r\n};\r\n\r\n// إعادة تعيين كلمة المرور - طلب عام\r\nexport const resetPassword = async (data) => {\r\n  const response = await publicAxios.post(RESET_PASSWORD, data);\r\n  return response.data;\r\n};\r\n\r\n// تسجيل الخروج - طلب محمي\r\nexport const logoutUser = async () => {\r\n  // الحصول على refresh token من الجلسة\r\n  const { sessionManager } = await import('../Config/cookies');\r\n  const session = sessionManager.restoreSession();\r\n  const refreshToken = session?.refreshToken;\r\n  \r\n  if (!refreshToken) {\r\n    throw new Error('لا يوجد refresh token');\r\n  }\r\n  \r\n  const response = await axiosInstance.post(LOGOUT, { \r\n    refresh: refreshToken \r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\n"],"mappings":"AAAA;AACA,SAAUA,WAAW,QAAQ,iBAAiB;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SACEC,QAAQ,EACRC,QAAQ,EACRC,KAAK,EACLC,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,MAAM,QACD,OAAO;;AAEd;AACA,OAAO,MAAMC,OAAO,GAAG,MAAAA,CAAO;EAAEC,YAAY;EAAEC,OAAO,GAAG;AAAW,CAAC,KAAK;EACvE,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACV,QAAQ,EAAE;IAChDO,YAAY;IACZC;EACF,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOD,IAAI,IAAK;EAC1C,MAAMF,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACX,QAAQ,EAAEY,IAAI,CAAC;EACvD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOF,IAAI,IAAK;EACvC,MAAMF,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACT,KAAK,EAAEU,IAAI,CAAC;EACpD,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,MAAMN,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACR,aAAa,EAAE;IACrDa;EACF,CAAC,CAAC;EACF,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAOL,IAAI,IAAK;EACxC,MAAMF,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACP,WAAW,EAAEQ,IAAI,CAAC;EAC1D,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAON,IAAI,IAAK;EAC3C,MAAMF,QAAQ,GAAG,MAAMZ,WAAW,CAACa,IAAI,CAACN,cAAc,EAAEO,IAAI,CAAC;EAC7D,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC;EACA,MAAM;IAAEC;EAAe,CAAC,GAAG,MAAM,MAAM,CAAC,mBAAmB,CAAC;EAC5D,MAAMC,OAAO,GAAGD,cAAc,CAACE,cAAc,CAAC,CAAC;EAC/C,MAAMP,YAAY,GAAGM,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEN,YAAY;EAE1C,IAAI,CAACA,YAAY,EAAE;IACjB,MAAM,IAAIQ,KAAK,CAAC,uBAAuB,CAAC;EAC1C;EAEA,MAAMb,QAAQ,GAAG,MAAMX,aAAa,CAACY,IAAI,CAACL,MAAM,EAAE;IAChDU,OAAO,EAAED;EACX,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}