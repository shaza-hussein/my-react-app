{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { updateUserProfile } from '../API';\nimport { handleApiError } from '../Utils/errorHandler';\nimport { validateRegisterForm } from '../Utils/validateForm';\n\n/**\r\n * هوك مخصص لتحديث بيانات البروفايل مع إدارة النموذج\r\n * @returns {object} - دوال وحالات التحديث والنموذج\r\n */\nconst useUpdateProfile = () => {\n  _s();\n  // حالة التحميل\n  const [loading, setLoading] = useState(false);\n  // رسالة الخطأ\n  const [error, setError] = useState(\"\");\n  // رسالة النجاح\n  const [success, setSuccess] = useState(\"\");\n\n  // حالات الحقول\n  const [fields, setFields] = useState({\n    first_name: '',\n    father_name: '',\n    last_name: ''\n  });\n  // أخطاء الحقول\n  const [errors, setErrors] = useState({});\n\n  // دالة لتغيير الحقول\n  const handleChange = e => {\n    setFields({\n      ...fields,\n      [e.target.name]: e.target.value\n    });\n    // مسح الخطأ عند التغيير\n    setErrors(prev => ({\n      ...prev,\n      [e.target.name]: undefined\n    }));\n  };\n\n  // دالة لتحديث الحقول من البروفايل\n  const setFieldsFromProfile = profile => {\n    if (profile) {\n      setFields({\n        first_name: profile.first_name || '',\n        father_name: profile.father_name || '',\n        last_name: profile.last_name || ''\n      });\n    }\n  };\n\n  // دالة إرسال النموذج\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // تحقق من صحة الحقول\n    const validationErrors = validateRegisterForm(fields);\n    // نريد فقط التحقق من الاسم الأول واسم الأب والكنية\n    delete validationErrors.phone_number;\n    delete validationErrors.password;\n    delete validationErrors.password_confirmation;\n    setErrors(validationErrors);\n    if (Object.keys(validationErrors).length > 0) return;\n    // إرسال فقط الحقول النصية (الصورة غير مدعومة من الباكند)\n    await updateProfile(fields);\n  };\n\n  // دالة تحديث البروفايل\n  const updateProfile = async fields => {\n    setLoading(true);\n    setError(\"\");\n    setSuccess(\"\");\n    try {\n      await updateUserProfile(fields);\n      setSuccess(\"تم تحديث البيانات بنجاح!\");\n      window.location.reload();\n    } catch (err) {\n      setError(handleApiError(err));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // دالة لمسح الخطأ\n  const clearError = () => setError(\"\");\n  // دالة لمسح النجاح\n  const clearSuccess = () => setSuccess(\"\");\n  return {\n    // دوال التحديث\n    updateProfile,\n    loading,\n    error,\n    success,\n    clearError,\n    clearSuccess,\n    // دوال النموذج\n    fields,\n    errors,\n    handleChange,\n    handleSubmit,\n    setFieldsFromProfile\n  };\n};\n_s(useUpdateProfile, \"ayokbhn5v+2CCM9jwXgjq8gQ63c=\");\nexport default useUpdateProfile;","map":{"version":3,"names":["useState","updateUserProfile","handleApiError","validateRegisterForm","useUpdateProfile","_s","loading","setLoading","error","setError","success","setSuccess","fields","setFields","first_name","father_name","last_name","errors","setErrors","handleChange","e","target","name","value","prev","undefined","setFieldsFromProfile","profile","handleSubmit","preventDefault","validationErrors","phone_number","password","password_confirmation","Object","keys","length","updateProfile","window","location","reload","err","clearError","clearSuccess"],"sources":["C:/Users/shaza/Desktop/test for NO/src/Hooks/useUpdateProfile.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { updateUserProfile } from '../API';\r\nimport { handleApiError } from '../Utils/errorHandler';\r\nimport { validateRegisterForm } from '../Utils/validateForm';\r\n\r\n/**\r\n * هوك مخصص لتحديث بيانات البروفايل مع إدارة النموذج\r\n * @returns {object} - دوال وحالات التحديث والنموذج\r\n */\r\nconst useUpdateProfile = () => {\r\n  // حالة التحميل\r\n  const [loading, setLoading] = useState(false);\r\n  // رسالة الخطأ\r\n  const [error, setError] = useState(\"\");\r\n  // رسالة النجاح\r\n  const [success, setSuccess] = useState(\"\");\r\n  \r\n  // حالات الحقول\r\n  const [fields, setFields] = useState({\r\n    first_name: '',\r\n    father_name: '',\r\n    last_name: ''\r\n  });\r\n  // أخطاء الحقول\r\n  const [errors, setErrors] = useState({});\r\n\r\n  // دالة لتغيير الحقول\r\n  const handleChange = (e) => {\r\n    setFields({ ...fields, [e.target.name]: e.target.value });\r\n    // مسح الخطأ عند التغيير\r\n    setErrors((prev) => ({ ...prev, [e.target.name]: undefined }));\r\n  };\r\n\r\n  // دالة لتحديث الحقول من البروفايل\r\n  const setFieldsFromProfile = (profile) => {\r\n    if (profile) {\r\n      setFields({\r\n        first_name: profile.first_name || '',\r\n        father_name: profile.father_name || '',\r\n        last_name: profile.last_name || ''\r\n      });\r\n    }\r\n  };\r\n\r\n  // دالة إرسال النموذج\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // تحقق من صحة الحقول\r\n    const validationErrors = validateRegisterForm(fields);\r\n    // نريد فقط التحقق من الاسم الأول واسم الأب والكنية\r\n    delete validationErrors.phone_number;\r\n    delete validationErrors.password;\r\n    delete validationErrors.password_confirmation;\r\n    setErrors(validationErrors);\r\n    if (Object.keys(validationErrors).length > 0) return;\r\n    // إرسال فقط الحقول النصية (الصورة غير مدعومة من الباكند)\r\n    await updateProfile(fields);\r\n  };\r\n\r\n  // دالة تحديث البروفايل\r\n  const updateProfile = async (fields) => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    try {\r\n      await updateUserProfile(fields);\r\n      setSuccess(\"تم تحديث البيانات بنجاح!\");\r\n      window.location.reload();\r\n    } catch (err) {\r\n      setError(handleApiError(err));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // دالة لمسح الخطأ\r\n  const clearError = () => setError(\"\");\r\n  // دالة لمسح النجاح\r\n  const clearSuccess = () => setSuccess(\"\");\r\n\r\n  return {\r\n    // دوال التحديث\r\n    updateProfile,\r\n    loading,\r\n    error,\r\n    success,\r\n    clearError,\r\n    clearSuccess,\r\n    // دوال النموذج\r\n    fields,\r\n    errors,\r\n    handleChange,\r\n    handleSubmit,\r\n    setFieldsFromProfile\r\n  };\r\n};\r\n\r\nexport default useUpdateProfile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}